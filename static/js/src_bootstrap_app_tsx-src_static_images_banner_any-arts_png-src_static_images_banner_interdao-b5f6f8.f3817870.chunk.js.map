{"version":3,"file":"static/js/src_bootstrap_app_tsx-src_static_images_banner_any-arts_png-src_static_images_banner_interdao-b5f6f8.f3817870.chunk.js","mappings":"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","sources":["static.app.tsx","components/errorBoundary.tsx","components/staticLoader.tsx","configs/manifest.config.ts","configs/register.config.ts","configs/index.ts","components/appIcon/rawAppIcon.tsx","components/appIcon/index.tsx","model/ui.controller.ts","hooks/useGotoStore.ts","view/market/topBanner/cardBanner.tsx","view/market/topBanner/index.tsx","view/market/bottomBanner.tsx","view/market/listAppByCategories/hooks/custom.ts","view/market/listAppByCategories/hooks/index.ts","view/market/trending/index.tsx","components/flexibleCard.tsx","components/verification.tsx","static/images/error-image.svg","view/market/newListedApp/cardNewListedApp.tsx","view/market/newListedApp/index.tsx","view/market/listingApp/integrationCard.tsx","view/market/listingApp/infiniteSlideIcon.tsx","view/market/listingApp/index.tsx","components/swiperOS/index.tsx","view/appInfo/appDetails/appTags.tsx","components/appCardInfo.tsx","view/market/hotApps/cardHotApp.tsx","view/market/hotApps/index.tsx","view/market/listAppByCategories/listApp.tsx","view/market/listAppByCategories/swiperListApp.tsx","view/market/listAppByCategories/index.tsx","view/appInfo/mentionsOnTwitter/cardTwitter.tsx","view/appInfo/mentionsOnTwitter/index.tsx","hooks/useWalletConnected.tsx","view/market/index.tsx","components/readmeLoader.tsx","view/appInfo/appDetails/installedApp.tsx","view/appInfo/appDetails/appAuthor.tsx","view/appInfo/appDetails/shareModal.tsx","view/appInfo/appDetails/appShare.tsx","view/appInfo/appDetails/index.tsx","view/appInfo/screenshot.tsx","view/appInfo/index.tsx","view/yourApps/listYourApp.tsx","view/yourApps/index.tsx","contant/index.tsx","view/search/menuBar.tsx","view/search/searchEngine.ts","view/search/menuSearch.tsx","view/search/index.tsx","view/listApp.tsx","components/privateRoute.tsx","view/index.tsx","model/devTools.ts","model/main.controller.ts","model/index.ts","bootstrap.app.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\n\nvar _panel = _interopRequireDefault(require(\"./static/images/panel.png\"));\n\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.png\"));\n\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst panels = [_panel.default];\nexports.panels = panels;","import { Component, ReactNode } from 'react'\n\nexport type ErrorBoundaryProps = {\n  children?: ReactNode\n  defaultChildren: ReactNode\n}\n\nexport type ErrorBoundaryState = {\n  failed: boolean\n}\n\n/**\n * Error Boundary\n */\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n\n    this.state = {\n      failed: false,\n    }\n  }\n\n  componentDidUpdate(prevProps: ErrorBoundaryProps) {\n    if (prevProps.children !== this.props.children)\n      return this.setState({ failed: false })\n  }\n\n  // Reference: https://reactjs.org/docs/error-boundaries.html\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { failed: true }\n  }\n\n  render() {\n    const { failed } = this.state\n    const { children, defaultChildren } = this.props\n\n    if (failed || !children) return defaultChildren\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import { Suspense, forwardRef, cloneElement, useCallback, useMemo } from 'react'\nimport { RemoteModule } from '@sentre/react-dynamic-remote-component'\nimport useSWR from 'swr'\nimport { useRegister } from '@sentre/senhub'\n\nimport { Spin } from 'antd'\nimport ErrorBoundary from 'components/errorBoundary'\n\nconst ONE_HOUR = 60 * 60 * 1000\n\n/**\n * Remote Static\n */\ntype StaticType = 'logo' | 'readme'\ntype MultiStaticType = 'panels'\n\n/**\n * Load asset json\n */\nconst useRemoteStatic = ({ url, scope }: RemoteModule): any => {\n  const fetchAsset = useCallback(\n    async (appId) => {\n      const root = url.replace('index.js', '')\n      const prefix = (asset: string | string[]) => {\n        if (typeof asset === 'string') return root + asset\n        if (Array.isArray(asset)) return asset.map((value) => root + value)\n        throw new Error('Invalid static asset')\n      }\n      const res = await fetch(root + `${appId}-asset-senhub.json`)\n      let data = await res.json()\n      Object.keys(data).forEach((key) => (data[key] = prefix(data[key])))\n      return data\n    },\n    [url],\n  )\n  const { data } = useSWR(scope, fetchAsset, {\n    shouldRetryOnError: false,\n    revalidateOnFocus: false,\n    dedupingInterval: ONE_HOUR,\n  })\n  return data || {}\n}\n\nconst RemoteStatic = forwardRef<\n  HTMLElement,\n  {\n    type?: StaticType\n    manifest: RemoteModule\n    render: (src: string) => JSX.Element\n  }\n>(({ type = 'default', manifest, render }, ref) => {\n  const { [type]: src } = useRemoteStatic(manifest)\n  return cloneElement(render(src), ref ? { ref } : {})\n})\n\n/**\n * Static Loader\n */\nexport const StaticLoader = forwardRef<\n  HTMLElement,\n  {\n    appId: string\n    type: StaticType\n    defaultData?: string\n    render: (url: string) => JSX.Element\n  }\n>(({ type, appId, defaultData = '', render }, ref) => {\n  const register = useRegister()\n  const url = useMemo(() => register[appId]?.url || '', [register, appId])\n  const manifest: RemoteModule = useMemo(\n    () => ({ url, scope: appId, module: './static' }),\n    [url, appId],\n  )\n\n  if (!url) return null\n  return (\n    <ErrorBoundary defaultChildren={render(defaultData)}>\n      <Suspense fallback={<Spin size=\"small\" />}>\n        <RemoteStatic\n          type={type}\n          manifest={manifest}\n          render={render}\n          ref={ref}\n        />\n      </Suspense>\n    </ErrorBoundary>\n  )\n})\n\n/**\n * Remote Multi Statics\n */\nconst RemoteMultiStatic = forwardRef<\n  HTMLElement,\n  {\n    type?: MultiStaticType\n    manifest: RemoteModule\n    render: (src: string[]) => JSX.Element\n  }\n>(({ type = 'default', manifest, render }, ref) => {\n  const { [type]: arrSrc } = useRemoteStatic(manifest)\n  return cloneElement(render(arrSrc || []), ref ? { ref } : {})\n})\n\n/**\n * Remote Multi Loader\n */\nexport const MultiStaticLoader = forwardRef<\n  HTMLElement,\n  {\n    appId: string\n    type: MultiStaticType\n    defaultData?: string[]\n    render: (url: string[]) => JSX.Element\n  }\n>(({ type, appId, defaultData = [''], render }, ref) => {\n  const register = useRegister()\n  const url = useMemo(() => register[appId]?.url || '', [register, appId])\n  const manifest: RemoteModule = useMemo(\n    () => ({ url, scope: appId, module: './static' }),\n    [url, appId],\n  )\n\n  if (!url) return null\n  return (\n    <ErrorBoundary defaultChildren={render(defaultData)}>\n      <Suspense fallback={<Spin size=\"small\" />}>\n        <RemoteMultiStatic\n          type={type}\n          manifest={manifest}\n          render={render}\n          ref={ref}\n        />\n      </Suspense>\n    </ErrorBoundary>\n  )\n})\n","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_NAME !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error(\n    'Please add REACT_APP_ID, REACT_APP_NAME, REACT_APP_URL in .env.local!',\n  )\n\n/**\n * Contructor\n */\n\nexport type Conf = {\n  devAppId: string\n  extra: SenReg\n  senreg: string\n}\n\nconst DEFAULT_APP_ID = process.env.REACT_APP_ID\nconst devApp = {\n  [DEFAULT_APP_ID]: {\n    url: process.env.REACT_APP_URL,\n    appId: DEFAULT_APP_ID,\n    name: process.env.REACT_APP_NAME,\n    author: {\n      name: process.env.REACT_APP_AUTHOR_NAME || '',\n      email: process.env.REACT_APP_AUTHOR_EMAIL || '',\n    },\n    tags: (process.env.REACT_APP_TAGS || '')\n      .split(',')\n      .map((tag) => tag.trim()),\n    description: process.env.REACT_APP_DESCRIPTION || '',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    devAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    devAppId: DEFAULT_APP_ID,\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env } from '@sentre/senhub'\nimport manifest from './manifest.config'\nimport register from './register.config'\n\nconst configs = {\n  manifest: manifest[env],\n  register: register[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { MouseEvent, ReactNode, useMemo } from 'react'\nimport { useRegister } from '@sentre/senhub'\n\nimport { Space, Avatar, Typography, Badge, AvatarProps } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport configs from 'configs'\nimport './index.less'\n\nconst {\n  register: { devAppId },\n} = configs\n\nexport type AppAvatarProps = {\n  appId: string\n  avatarProps: AvatarProps\n}\n\nexport const AppAvatar = ({ appId, avatarProps }: AppAvatarProps) => {\n  return appId === devAppId ? (\n    <Badge.Ribbon className=\"sentre-ribbon-dev\" text=\"dev\" placement=\"start\">\n      <Avatar {...avatarProps}>\n        <IonIcon name=\"image-outline\" />\n      </Avatar>\n    </Badge.Ribbon>\n  ) : (\n    <Avatar {...avatarProps}>\n      <IonIcon name=\"image-outline\" />\n    </Avatar>\n  )\n}\n\nexport type RawAppIconProps = {\n  appId: string\n  size?: number\n  onClick?: (e: MouseEvent<HTMLElement>) => void\n  name?: boolean\n  direction?: 'vertical' | 'horizontal'\n  children?: ReactNode\n  src: ReactNode\n}\n\nexport const RawVerticalAppIcon = ({\n  src,\n  appId,\n  onClick = () => {},\n  size = 64,\n  name = true,\n}: RawAppIconProps) => {\n  const register = useRegister()\n  const { name: appName } = useMemo(\n    () => register[appId] || { name: 'Unknown' },\n    [register, appId],\n  )\n\n  return (\n    <Space\n      direction=\"vertical\"\n      style={{ width: size, textAlign: 'center', lineHeight: 1.25 }}\n      onClick={onClick}\n    >\n      <AppAvatar\n        appId={appId}\n        avatarProps={{\n          src,\n          shape: 'square',\n          size,\n          style: { cursor: 'pointer' },\n        }}\n      />\n      {name ? (\n        <Typography.Text\n          style={{\n            fontSize: Math.floor(size / 4.5),\n          }}\n        >\n          {appName}\n        </Typography.Text>\n      ) : null}\n    </Space>\n  )\n}\n\nexport const RawHorizontalAppIcon = ({\n  src,\n  appId,\n  onClick = () => {},\n  size = 32,\n  name = true,\n}: RawAppIconProps) => {\n  const register = useRegister()\n  const { name: appName } = useMemo(\n    () => register[appId] || { name: 'Unknown' },\n    [register, appId],\n  )\n\n  return (\n    <Space\n      style={{\n        cursor: 'pointer',\n        lineHeight: 1,\n      }}\n      onClick={onClick}\n    >\n      <AppAvatar\n        appId={appId}\n        avatarProps={{\n          src,\n          shape: 'square',\n          size,\n          style: { cursor: 'pointer' },\n        }}\n      />\n      {name ? <Typography.Text>{appName}</Typography.Text> : null}\n    </Space>\n  )\n}\n\nconst RawAppIcon = ({ direction = 'vertical', ...rest }: RawAppIconProps) => {\n  if (direction === 'vertical') return <RawVerticalAppIcon {...rest} />\n  return <RawHorizontalAppIcon {...rest} />\n}\n\nexport default RawAppIcon\n","import { StaticLoader } from 'components/staticLoader'\nimport RawAppIcon, { RawAppIconProps } from './rawAppIcon'\n\nexport type AppIconProps = Omit<RawAppIconProps, 'src'>\n\nconst AppIcon = (props: AppIconProps) => {\n  return (\n    <StaticLoader\n      type=\"logo\"\n      appId={props.appId}\n      render={(src) => <RawAppIcon {...props} src={src} />}\n    />\n  )\n}\n\nexport default AppIcon\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\nexport type Theme = 'light' | 'dark'\nexport type Background = Record<Theme, string | undefined>\n\nexport type UIState = {\n  theme: Theme\n  width: number\n  infix: Infix\n  touchable: boolean\n  visibleActionCenter: boolean\n  visibleInstaller: boolean\n  background: Background\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\nconst isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\nconst getTheme = (): Theme => {\n  if (window.matchMedia('(prefers-color-scheme: light)').matches) return 'light'\n  return 'dark'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: UIState = {\n  theme: getTheme(),\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  visibleActionCenter: false,\n  visibleInstaller: false,\n  background: {\n    light: '',\n    dark: '',\n  },\n}\n\n/**\n * Actions\n */\n\nexport const setTheme = createAsyncThunk(\n  `${NAME}/setTheme`,\n  async (theme: Theme) => {\n    return { theme }\n  },\n)\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setVisibleActionCenter = createAsyncThunk(\n  `${NAME}/setVisibleActionCenter`,\n  async (visible: boolean) => {\n    return { visibleActionCenter: visible }\n  },\n)\n\nexport const setVisibleInstaller = createAsyncThunk(\n  `${NAME}/setVisibleInstaller`,\n  async (visible: boolean) => {\n    return { visibleInstaller: visible }\n  },\n)\n\nexport const setBackground = createAsyncThunk(\n  `${NAME}/setBackground`,\n  async (background: Background) => {\n    return { background }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTheme.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleActionCenter.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleInstaller.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setBackground.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  setVisibleActionCenter,\n  setVisibleInstaller,\n} from 'model/ui.controller'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppDispatch, AppState } from 'model'\n\nimport configs from 'configs'\nconst {\n  manifest: { appId: storeId },\n} = configs\n\nexport type GoToStoreProps = {\n  appId?: string\n  blank?: boolean\n  search?: string\n}\n\nexport const useGoToStoreCallback = () => {\n  const history = useHistory()\n  const dispatch = useDispatch<AppDispatch>()\n  const visibleActionCenter = useSelector(\n    (state: AppState) => state.ui.visibleActionCenter,\n  )\n  const visibleInstaller = useSelector(\n    (state: AppState) => state.ui.visibleInstaller,\n  )\n\n  const onGotoStoreCallback = useCallback(\n    async ({ appId, blank = false, search }: GoToStoreProps = {}) => {\n      if (visibleActionCenter) await dispatch(setVisibleActionCenter(false))\n      if (visibleInstaller) await dispatch(setVisibleInstaller(false))\n      const nav = blank\n        ? (url: string) => window.open(url, '_blank')\n        : history.push\n      let url = appId ? `/app/${storeId}/${appId}` : `/app/${storeId}`\n      url = search ? url + search : url\n      window.scrollTo(0, 0)\n      return nav(url)\n    },\n    [dispatch, history, visibleActionCenter, visibleInstaller],\n  )\n\n  return onGotoStoreCallback\n}\n\nexport const useGoToStore = () => {\n  const onGotoStoreCallback = useGoToStoreCallback()\n  const onGotoStore = useCallback(\n    async ({ appId, blank = false, search }: GoToStoreProps = {}) => {\n      return onGotoStoreCallback({ appId, blank, search })\n    },\n    [onGotoStoreCallback],\n  )\n\n  return onGotoStore\n}\n","import { Infix, useTheme, useWidth } from '@sentre/senhub'\n\nimport { Button, Card, Col, Image, Row, Space, Typography } from 'antd'\n\nimport AppIcon from 'components/appIcon'\n\nimport { useGoToStore } from 'hooks/useGotoStore'\n\nimport topBgLight from 'static/images/top-bg.png'\nimport topBgDark from 'static/images/top-bg-dark.png'\nimport './index.less'\nimport { useMemo } from 'react'\n\ntype CardBannerProps = {\n  image: string\n  title: string\n  description: string\n  appId: string\n}\nconst CardBanner = ({ image, appId, description, title }: CardBannerProps) => {\n  const theme = useTheme()\n  const width = useWidth()\n  const onGoToApp = useGoToStore()\n  const topBg = theme === 'light' ? topBgLight : topBgDark\n  const titleSize = useMemo(() => {\n    if (width > 1600) return { fontSize: 72 }\n    if (width > 1320) return { fontSize: 54 }\n    if (width > Infix.lg) return { fontSize: 42 }\n    return {}\n  }, [width])\n  const cardTitleSize = width < 1200 ? 16 : 32\n\n  return (\n    <Card\n      style={{\n        height: '100%',\n        boxShadow: 'none',\n        backgroundImage: `url(${topBg})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }}\n      bodyStyle={{ padding: 0 }}\n      bordered={false}\n    >\n      <Row gutter={[24, 24]}>\n        <Col\n          xs={{ span: 24, order: 2 }}\n          md={{ span: 24, order: 2 }}\n          lg={{ span: 12, order: 1 }}\n        >\n          <Space\n            style={{ padding: '56px 32px' }}\n            direction=\"vertical\"\n            size={cardTitleSize}\n          >\n            <AppIcon appId={appId} direction=\"horizontal\" />\n            <Typography.Title level={1} style={{ ...titleSize }}>\n              {title}\n            </Typography.Title>\n            <Typography.Text style={{ fontSize: 20 }}>\n              {description}\n            </Typography.Text>\n            <Button\n              className=\"btn-explore-now\"\n              onClick={() => onGoToApp({ appId })}\n              size=\"large\"\n              type=\"primary\"\n            >\n              Explore now\n            </Button>\n          </Space>\n        </Col>\n        <Col\n          xs={{ span: 24, order: 1 }}\n          md={{ span: 24, order: 1 }}\n          lg={{ span: 12, order: 2 }}\n          className=\"img-banner\"\n          style={{ textAlign: 'right' }}\n        >\n          <Image className=\"image-aspect-43\" src={image} preview={false} />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardBanner\n","import { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { Navigation, Pagination, Autoplay } from 'swiper'\n\nimport interdao from 'static/images/banner/interdao.png'\nimport lightningTunnel from 'static/images/banner/lightning-tunnel.png'\nimport anyArts from 'static/images/banner/any-arts.png'\n\nimport './index.less'\nimport CardBanner from './cardBanner'\n\nconst PANELS = [\n  {\n    image: interdao,\n    title: 'The Universal DAO solution for Solana.',\n    description: 'A Customizable DAO Solution for various purposes.',\n    appId: 'interdao',\n  },\n  {\n    image: anyArts,\n    title: 'The Most Powerful NFT Aggregator',\n    description: 'Multi-token support & Fast Inclusive',\n    appId: 'any_arts',\n  },\n  {\n    image: lightningTunnel,\n    title: 'One-time sign for bulk transation',\n    description: 'Supper speed & Fee saving',\n    appId: 'lightning_tunnel',\n  },\n]\n\nconst TopBanner = () => {\n  SwiperCore.use([Autoplay])\n  return (\n    <Swiper\n      className=\"hero-banner\"\n      slidesPerView={1}\n      navigation={false}\n      pagination={{\n        clickable: true,\n        type: 'bullets',\n        renderBullet: function (index, className) {\n          return `<span class=\"${className} indicator\" key=\"${index}\"></span>`\n        },\n      }}\n      modules={[Navigation, Pagination]}\n      autoplay\n      loop\n    >\n      {PANELS.map(({ appId, description, image, title }, index) => {\n        return (\n          <SwiperSlide\n            style={{\n              cursor: 'pointer',\n            }}\n            key={index}\n          >\n            <CardBanner\n              image={image}\n              appId={appId}\n              title={title}\n              description={description}\n            />\n          </SwiperSlide>\n        )\n      })}\n    </Swiper>\n  )\n}\n\nexport default TopBanner\n","import { useMemo } from 'react'\nimport { Infix, useWidth } from '@sentre/senhub'\n\nimport { Card, Col, Row } from 'antd'\n\nimport storePanel1 from 'static/images/market/store-bpanel1.jpeg'\nimport storePanel2 from 'static/images/market/store-bpanel2.png'\n\nconst PAGE_PADDING = 20\nconst ELEMENT_PADDING = 24\nconst HEIGHT_RATIO = 1.777777\nconst PANELS = [\n  {\n    src: storePanel1,\n    redirect:\n      'https://sentre.medium.com/sentre-protocol-won-wormhole-silver-at-convergence-hackathon-d5f582e19906',\n  },\n  {\n    src: storePanel2,\n    redirect:\n      'https://sentre.medium.com/now-live-make-defi-easy-with-sen-academy-vietnamese-below-8cf6f5b16427',\n  },\n]\n\nconst BottomBanner = () => {\n  const width = useWidth()\n\n  const bannerHeightRatio = useMemo(\n    () => (width < Infix.md ? HEIGHT_RATIO : HEIGHT_RATIO * 2),\n    [width],\n  )\n  const bannerWidth = useMemo(\n    () =>\n      width < Infix.md\n        ? width - PAGE_PADDING\n        : width - PAGE_PADDING - ELEMENT_PADDING,\n    [width],\n  )\n\n  return (\n    <Row gutter={[24, 16]}>\n      {PANELS.map((item, index) => {\n        return (\n          <Col md={12} xs={24} key={index}>\n            <Card\n              style={{\n                height: Math.min(\n                  (1920 - PAGE_PADDING - ELEMENT_PADDING) / HEIGHT_RATIO / 2,\n                  bannerWidth / bannerHeightRatio,\n                ),\n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'cover',\n                backgroundImage: `url(${item.src})`,\n                cursor: 'pointer',\n              }}\n              bordered={false}\n              onClick={() => window.open(item.redirect, '_blank')}\n            />\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default BottomBanner\n","export type RelatedCategory = {\n  appIds?: AppIds\n}\n\nexport type CategoryFilter = {\n  authorEmail?: string\n}\n\nexport const compareAliasString = (\n  val: string,\n  arr: string[] = [],\n): boolean => {\n  return arr.map((val) => val.toLowerCase()).includes(val.toLowerCase())\n}\n\nexport const findTaggedApps = (tag: string, register: SenReg): AppIds => {\n  const appIds: AppIds = Object.keys(register)\n  return appIds.filter((appId) =>\n    compareAliasString(tag, register[appId]?.tags),\n  )\n}\n\nexport const findSuggestedApps = (\n  related: RelatedCategory,\n  register: SenReg,\n) => {\n  if (!related.appIds) return []\n  // Suggested by tags\n  let appIds: AppIds = Object.keys(register)\n  let suggestedTags: string[] = []\n  for (const appId of related.appIds) {\n    const additionalTags = register[appId]?.tags || []\n    suggestedTags = Array.from(new Set([...suggestedTags, ...additionalTags]))\n  }\n  return appIds.filter((appId) => {\n    if (related.appIds?.includes(appId)) return false\n    for (const tag of suggestedTags)\n      if (compareAliasString(tag, register[appId]?.tags)) return true\n    return false\n  })\n}\n\nexport const filterApp = (\n  register: SenReg,\n  appIds: AppIds,\n  { authorEmail }: CategoryFilter,\n): AppIds => {\n  return appIds.filter((appId) => {\n    const { author } = register[appId] || {}\n    return author?.email === authorEmail\n  })\n}\n","import { useRegister } from '@sentre/senhub'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\n\nimport {\n  CategoryFilter,\n  RelatedCategory,\n  filterApp,\n  findSuggestedApps,\n  findTaggedApps,\n} from './custom'\n\nexport enum CustomCategory {\n  suggest = 'for-you',\n}\n\nexport type CategoryOptions = {\n  category: string\n  defaultTitle?: string\n  related?: RelatedCategory\n  filter?: CategoryFilter\n}\n\nexport const useAppCategory = ({\n  category,\n  defaultTitle = '',\n  related,\n  filter,\n}: CategoryOptions) => {\n  const register = useRegister()\n  const [appIds, setAppIds] = useState<AppIds>([])\n\n  const title = useMemo(() => {\n    if (defaultTitle) return defaultTitle\n    return category.replace(/\\W/g, ' ')\n  }, [category, defaultTitle])\n\n  /**\n   * find all app with CategoryData with case:\n   * suggest-for-you: find all apps related to other apps\n   * others: find all apps without tags\n   * default: filter apps with tags\n   */\n  const findApps = useCallback(async () => {\n    let appIds: AppIds = []\n    switch (category) {\n      case CustomCategory.suggest:\n        appIds = findSuggestedApps(related || {}, register)\n        break\n      default:\n        appIds = findTaggedApps(category, register)\n        break\n    }\n    if (filter) appIds = filterApp(register, appIds, filter)\n    return setAppIds(appIds)\n  }, [register, category, related, filter])\n\n  useEffect(() => {\n    findApps()\n  }, [findApps])\n\n  return {\n    title,\n    appIds,\n  }\n}\n","import { ReactNode } from 'react'\nimport { useTheme } from '@sentre/senhub'\n\nimport { Card, Col, Image, Row, Space, Typography } from 'antd'\n\nimport { useGoToStore } from 'hooks/useGotoStore'\nimport { useAppCategory } from '../listAppByCategories/hooks'\n\nimport './index.less'\n\nimport Trending1_LIGHT from 'static/images/trending/trending-1.png'\nimport Trending2_LIGHT from 'static/images/trending/trending-2.png'\nimport Trending3_LIGHT from 'static/images/trending/trending-3.png'\nimport Trending4_LIGHT from 'static/images/trending/trending-4.png'\n\nimport Trending1_DARK from 'static/images/trending/trending-1-dark.png'\nimport Trending2_DARK from 'static/images/trending/trending-2-dark.png'\nimport Trending3_DARK from 'static/images/trending/trending-3-dark.png'\nimport Trending4_DARK from 'static/images/trending/trending-4-dark.png'\n\nimport Utility from 'static/images/trending/Utility.png'\nimport Liquidity from 'static/images/trending/Liquidity.png'\nimport Game from 'static/images/trending/Game.png'\nimport DAO from 'static/images/trending/DAO.png'\n\nconst CATEGORIES = ['utility', 'DAO', 'game', 'liquidity']\nconst MULTI_BG_LIGHT = {\n  trending_1: Trending1_LIGHT,\n  trending_2: Trending2_LIGHT,\n  trending_3: Trending3_LIGHT,\n  trending_4: Trending4_LIGHT,\n}\nconst MULTI_BG_DARK = {\n  trending_1: Trending1_DARK,\n  trending_2: Trending2_DARK,\n  trending_3: Trending3_DARK,\n  trending_4: Trending4_DARK,\n}\n\ntype CardTrendingProps = {\n  align?: 'top' | 'bottom' | 'middle' | 'stretch'\n  justify?:\n    | 'center'\n    | 'start'\n    | 'end'\n    | 'space-around'\n    | 'space-between'\n    | 'space-evenly'\n  bg?: string\n  middle?: boolean\n  children?: ReactNode\n  bgRight?: string\n  category: string\n}\nconst CardTrending = ({\n  align = 'middle',\n  justify = 'start',\n  bg,\n  middle = false,\n  children,\n  bgRight,\n  category,\n}: CardTrendingProps) => {\n  const { appIds } = useAppCategory({ category: category })\n  const onGoToStore = useGoToStore()\n  const colWithAlign = !middle ? 24 : undefined\n\n  return (\n    <Row gutter={[24, 24]} justify={justify} align={align}>\n      {bg && (\n        <Col className=\"bg-trending\" span={24}>\n          <Image src={bg} preview={false} style={{ borderRadius: '16px' }} />\n        </Col>\n      )}\n      <Col span={colWithAlign}>\n        <Card\n          bordered={false}\n          style={{\n            boxShadow: 'unset',\n            background: 'transparent',\n            cursor: 'pointer',\n            zIndex: 1,\n          }}\n          onClick={() => onGoToStore({ search: `?category=${category}` })}\n        >\n          <Space direction=\"vertical\">\n            <Typography.Title level={4} style={{ textTransform: 'capitalize' }}>\n              {category}\n            </Typography.Title>\n            <Typography.Text type=\"secondary\">\n              {appIds.length} DApps\n            </Typography.Text>\n            {children}\n          </Space>\n        </Card>\n      </Col>\n      {bgRight && (\n        <Col className=\"bg-trending-right\" span={24}>\n          <Image\n            src={bgRight}\n            preview={false}\n            style={{ borderRadius: '16px', width: '70%' }}\n          />\n        </Col>\n      )}\n    </Row>\n  )\n}\n\nconst Trending = () => {\n  const theme = useTheme()\n  const BG_COLOR = theme === 'light' ? MULTI_BG_LIGHT : MULTI_BG_DARK\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Typography.Title level={2}>Trending topics</Typography.Title>\n      </Col>\n      <Col span={12}>\n        <CardTrending\n          align=\"middle\"\n          bg={BG_COLOR.trending_1}\n          bgRight={Utility}\n          category={CATEGORIES[0]}\n        />\n      </Col>\n      <Col span={12}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <CardTrending\n              align=\"middle\"\n              bg={BG_COLOR.trending_2}\n              bgRight={DAO}\n              category={CATEGORIES[1]}\n            />\n          </Col>\n          <Col xs={24} md={12}>\n            <CardTrending\n              align=\"middle\"\n              bg={BG_COLOR.trending_3}\n              bgRight={Game}\n              category={CATEGORIES[2]}\n            />\n          </Col>\n          <Col xs={24} md={12}>\n            <CardTrending\n              align=\"middle\"\n              bg={BG_COLOR.trending_4}\n              bgRight={Liquidity}\n              category={CATEGORIES[3]}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Trending\n","import { useTheme } from '@sentre/senhub'\nimport { Card } from 'antd'\nimport { CSSProperties, ReactNode } from 'react'\n\nconst MULTI_BG_LIGHT = {\n  purple:\n    'linear-gradient(0deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2)), rgba(99, 51, 255, 0.1)',\n  green:\n    'linear-gradient(0deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2)), rgba(14, 181, 111, 0.1)',\n  blue: 'linear-gradient(0deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2)), rgba(51, 139, 255, 0.1)',\n  pink: 'linear-gradient(0deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2)), rgba(255, 111, 216, 0.1)',\n  murrey: '#EAE6F5',\n}\nconst MULTI_BG_DARK = {\n  purple: '#201A32',\n  green: '#2B3330',\n  blue: 'linear-gradient(0deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2)), rgba(51, 139, 255, 0.1)',\n  pink: '#2E252C',\n  murrey: '#09090D',\n}\n\nexport type FlexibleCardType = 'purple' | 'green' | 'blue' | 'pink' | 'murrey'\ntype FlexibleCardProps = {\n  children?: ReactNode\n  type?: FlexibleCardType\n  style?: CSSProperties\n  spacing?: number\n  bodySpacing?: number\n  radius?: number\n  bodyRadius?: number\n  bodyStyle?: CSSProperties\n  transparent?: boolean\n  className?: string\n  bordered?: boolean\n}\nconst FlexibleCard = ({\n  children,\n  type = 'purple',\n  spacing = 12,\n  bodySpacing = 0,\n  bodyRadius = 12,\n  radius = 16,\n  style,\n  bodyStyle,\n  transparent = false,\n  className = '',\n  bordered = true,\n}: FlexibleCardProps) => {\n  const theme = useTheme()\n  const bgColor = theme === 'dark' ? MULTI_BG_DARK[type] : MULTI_BG_LIGHT[type]\n  const styleBodyBg = transparent ? { background: 'transparent' } : {}\n\n  return (\n    <Card\n      style={{\n        ...style,\n        background: bgColor,\n        borderRadius: radius,\n        boxShadow: 'unset',\n        height: '100%',\n      }}\n      className={className}\n      bodyStyle={{ padding: spacing, height: '100%' }}\n      bordered={bordered}\n    >\n      <Card\n        bordered={false}\n        style={{\n          ...bodyStyle,\n          ...styleBodyBg,\n          borderRadius: bodyRadius,\n          boxShadow: 'unset',\n          height: '100%',\n        }}\n        bodyStyle={{ padding: bodySpacing, height: '100%' }}\n      >\n        {children}\n      </Card>\n    </Card>\n  )\n}\n\nexport default FlexibleCard\n","import { Tooltip } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nexport type VerificationProps = {\n  verified?: boolean\n  title?: string\n  size?: number\n  color?: string\n  backgroundColor?: string\n}\n\nconst Verification = ({\n  verified,\n  title = 'Verified by Sentre',\n  size = 16,\n  color = '#18A0FB',\n  backgroundColor = '#fafafa',\n}: VerificationProps) => {\n  return verified ? (\n    <Tooltip title={title}>\n      <IonIcon\n        name=\"checkmark-circle\"\n        style={{\n          color,\n          backgroundColor,\n          borderRadius: 8,\n          fontSize: size,\n        }}\n      />\n    </Tooltip>\n  ) : null\n}\n\nexport default Verification\n","var _rect, _path, _path2, _path3, _path4;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgErrorImage(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 800,\n    height: 600,\n    viewBox: \"0 0 800 600\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 800,\n    height: 600,\n    rx: 16,\n    fill: \"#D3D3D6\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M450 245H350C341.716 245 335 251.716 335 260V340C335 348.284 341.716 355 350 355H450C458.284 355 465 348.284 465 340V260C465 251.716 458.284 245 450 245Z\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M425 285C430.523 285 435 280.523 435 275C435 269.477 430.523 265 425 265C419.477 265 415 269.477 415 275C415 280.523 419.477 285 425 285Z\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415 324.934L386.669 296.656C384.866 294.853 382.443 293.807 379.895 293.732C377.347 293.656 374.866 294.557 372.959 296.249L335 329.999\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M390 355L428.544 316.457C430.306 314.69 432.666 313.647 435.158 313.531C437.651 313.416 440.097 314.236 442.016 315.832L465 335\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgErrorImage);\nexport default __webpack_public_path__ + \"static/media/error-image.2a4549c596199c25fa7af4dbefe26b3a.svg\";\nexport { ForwardRef as ReactComponent };","import { CSSProperties, useMemo } from 'react'\nimport { useRegister } from '@sentre/senhub'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\nimport AppIcon from 'components/appIcon'\nimport FlexibleCard from 'components/flexibleCard'\nimport { MultiStaticLoader } from 'components/staticLoader'\nimport Verification from 'components/verification'\n\nimport { useGoToStore } from 'hooks/useGotoStore'\n\nimport imgError from 'static/images/error-image.svg'\n\nconst APP_DEFAULT: ComponentManifest = {\n  name: '',\n  verified: false,\n  author: { name: '', email: '' },\n  description: '',\n  url: '',\n  appId: '',\n  tags: [],\n}\n\ntype CardNewListedAppProps = {\n  vertical?: boolean\n  appId: string\n  style?: CSSProperties\n  spacing?: number\n}\nconst CardNewListedApp = ({\n  vertical = false,\n  appId,\n  style,\n  spacing,\n}: CardNewListedAppProps) => {\n  const register = useRegister()\n  const onOpenAppDetail = useGoToStore()\n\n  const { name, verified, author, description } = useMemo(\n    () => register[appId] || APP_DEFAULT,\n    [register, appId],\n  )\n\n  const verticalSpan = vertical ? 24 : undefined\n\n  return (\n    <FlexibleCard\n      className=\"new-listed-card hoverable-transform\"\n      transparent\n      type=\"pink\"\n      spacing={spacing}\n    >\n      <Row\n        gutter={[24, 24]}\n        wrap={vertical}\n        onClick={() => onOpenAppDetail({ appId })}\n        style={{ cursor: 'pointer' }}\n      >\n        <Col span={verticalSpan || 11} className=\"panel-img\">\n          <MultiStaticLoader\n            defaultData={[imgError]}\n            appId={appId}\n            type=\"panels\"\n            render={(data) => (\n              <Card\n                className=\"listed-card-img\"\n                bordered={false}\n                style={{\n                  backgroundImage: `url(${data[0] || imgError})`,\n                  backgroundPosition: 'center',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundSize: 'cover',\n                  cursor: 'pointer',\n                  overflow: 'hidden',\n                  boxShadow: 'none',\n                  borderRadius: 12,\n                  ...style,\n                }}\n                bodyStyle={{ padding: 0 }}\n              />\n            )}\n          />\n        </Col>\n        <Col span={verticalSpan}>\n          <Space direction=\"vertical\" size={16} style={{ paddingTop: 32 }}>\n            <Space size={16} align=\"start\">\n              <AppIcon appId={appId} size={40} name={false} />\n              <Space direction=\"vertical\" size={0}>\n                <Space>\n                  <Typography.Title level={5}>{name}</Typography.Title>\n                  <Verification verified={verified} />\n                </Space>\n                <Typography.Text type=\"secondary\">\n                  {author.name}\n                </Typography.Text>\n              </Space>\n            </Space>\n            <Typography.Text>{description}</Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </FlexibleCard>\n  )\n}\n\nexport default CardNewListedApp\n","import { useWidth } from '@sentre/senhub'\n\nimport { Col, Row, Typography } from 'antd'\nimport CardNewListedApp from './cardNewListedApp'\n\nimport './index.less'\n\nconst NEW_LISTED_APP_ID = ['solend', 'any_arts', 'hedge', 'zeta_markets']\n\nconst NewListedApp = () => {\n  const width = useWidth()\n\n  const cardSpacing = width < 768 ? 16 : 32\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Typography.Title level={2}>New listed</Typography.Title>\n      </Col>\n      <Col xs={24} md={12}>\n        <CardNewListedApp\n          appId={NEW_LISTED_APP_ID[0]}\n          vertical\n          spacing={cardSpacing}\n        />\n      </Col>\n      <Col xs={24} md={12}>\n        <Row\n          gutter={[24, 24]}\n          justify=\"space-between\"\n          style={{ height: '100%' }}\n        >\n          {[...NEW_LISTED_APP_ID].splice(1).map((appId, idx) => (\n            <Col span={24} key={idx}>\n              <CardNewListedApp appId={appId} spacing={0} />\n            </Col>\n          ))}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default NewListedApp\n","import { useTheme } from '@sentre/senhub'\nimport { Button, Card, Space, Typography } from 'antd'\n\nconst IntegrationCard = () => {\n  const theme = useTheme()\n  return (\n    <Card\n      bordered={false}\n      style={{\n        boxShadow: 'none',\n        background: theme === 'light' ? '#FFF' : undefined,\n      }}\n    >\n      <Space direction=\"vertical\">\n        <Typography.Text style={{ fontSize: 32, color: '#9270FF' }}>\n          Integration\n        </Typography.Text>\n        <Typography.Title level={2}>Ready to list your DApp?</Typography.Title>\n        <Typography.Text type=\"secondary\">\n          No need to start from scratch! This directory includes open source\n          tools, tutorials, and libraries built or submitted by the Sentre\n          community.\n        </Typography.Text>\n        <Space size={12}>\n          <Button type=\"primary\" size=\"large\">\n            Submit project\n          </Button>\n          <Button size=\"large\" ghost onClick={() => {}}>\n            Learn more\n          </Button>\n        </Space>\n      </Space>\n    </Card>\n  )\n}\n\nexport default IntegrationCard\n","import { useMemo } from 'react'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { Autoplay } from 'swiper'\nimport { Infix, useWidth } from '@sentre/senhub'\n\nimport AppIcon from 'components/appIcon'\n\ntype InfiniteSlideIconProps = {\n  appIds: AppIds\n  size?: number\n  reverse?: boolean\n  slidePerView?: number | 'auto'\n  spacing?: number\n  speed?: number\n}\n\nconst InfiniteSlideIcon = ({\n  appIds,\n  size = 84,\n  reverse = false,\n  slidePerView = 5,\n  spacing = 24,\n  speed = 7000,\n}: InfiniteSlideIconProps) => {\n  SwiperCore.use([Autoplay])\n  const width = useWidth()\n\n  const calculatePerCard = useMemo(() => {\n    if (width < Infix.lg) return 3\n    return 5\n  }, [width])\n\n  return (\n    <div>\n      <Swiper\n        slidesPerView={calculatePerCard}\n        spaceBetween={spacing}\n        autoplay={{\n          delay: 0,\n          disableOnInteraction: false,\n          reverseDirection: reverse,\n        }}\n        speed={speed}\n        loop\n        className=\"apps-slide-infinite\"\n      >\n        {appIds.map((appId, idx) => (\n          <SwiperSlide key={idx}>\n            <AppIcon size={size} appId={appId} name={false} />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </div>\n  )\n}\n\nexport default InfiniteSlideIcon\n","import { Infix, useRegister, useWidth } from '@sentre/senhub'\n\nimport { Col, Row, Space } from 'antd'\nimport IntegrationCard from './integrationCard'\nimport InfiniteSlideIcon from './infiniteSlideIcon'\n\nimport './index.less'\nimport FlexibleCard from 'components/flexibleCard'\n\nconst ListingApp = () => {\n  const register = useRegister()\n  const appIds = Object.keys(register)\n  const width = useWidth()\n\n  const isMobile = width < Infix.md\n  const slideStyle = isMobile\n    ? { paddingLeft: 12, paddingRight: 12 }\n    : { paddingLeft: 0, paddingRight: 0, marginLeft: -12 }\n  const paddingCard = isMobile ? { padding: '0 0 24px 0' } : { padding: 0 }\n\n  return (\n    <FlexibleCard\n      type=\"murrey\"\n      spacing={0}\n      bodyStyle={{ ...paddingCard }}\n      bordered={false}\n      transparent\n    >\n      <Row gutter={[24, 24]} align=\"middle\">\n        <Col xs={24} md={12}>\n          <IntegrationCard />\n        </Col>\n        <Col xs={24} md={12} style={{ ...slideStyle }}>\n          <Space direction=\"vertical\" style={{ width: '100%' }} size={32}>\n            <InfiniteSlideIcon appIds={appIds} />\n            <InfiniteSlideIcon appIds={appIds} reverse />\n          </Space>\n        </Col>\n      </Row>\n    </FlexibleCard>\n  )\n}\n\nexport default ListingApp\n","import { ReactNode } from 'react'\nimport { Swiper } from 'swiper/react'\nimport SwiperCore, { Lazy, Navigation, SwiperOptions } from 'swiper'\n\nimport 'swiper/css/bundle'\nimport './index.less'\n\nexport const SwiperOs = ({\n  children,\n  navigationId = '',\n  ...rest\n}: { children: ReactNode; navigationId?: string } & SwiperOptions) => {\n  const navigaConfig = {\n    nextEl: `.${navigationId}swiper-next-element`,\n    prevEl: `.${navigationId}swiper-prev-element`,\n  }\n  SwiperCore.use([Lazy])\n\n  return (\n    <Swiper\n      slidesPerView={'auto'}\n      lazy\n      spaceBetween={24}\n      modules={[Navigation]}\n      navigation={navigaConfig}\n      {...rest}\n    >\n      {children}\n    </Swiper>\n  )\n}\n","import { Space, Tag } from 'antd'\n\nimport { util } from '@sentre/senhub'\n\nexport type AppTagsProps = { tags?: string[]; wrap?: boolean }\n\nconst AppTags = ({ tags = [], wrap = true }: AppTagsProps) => {\n  return (\n    <Space size={8} wrap={wrap}>\n      {tags.map((tag, index) => (\n        <Tag\n          style={{\n            margin: 0,\n            borderRadius: 4,\n            color: util.randomColor(tag),\n          }}\n          color={util.randomColor(tag, 0.2)}\n          key={index}\n        >\n          {tag}\n        </Tag>\n      ))}\n    </Space>\n  )\n}\n\nexport default AppTags\n","import { MouseEvent, useCallback, useMemo } from 'react'\nimport {\n  useGoToApp,\n  useInstallApp,\n  useRegister,\n  useAppIds,\n} from '@sentre/senhub'\n\nimport { Button, Card, Col, Row, Typography } from 'antd'\nimport AppIcon from 'components/appIcon'\nimport Verification from 'components/verification'\nimport AppTags from 'view/appInfo/appDetails/appTags'\n\nimport { useGoToStore } from 'hooks/useGotoStore'\n\nconst LIMIT_TAG = 2\nconst START_SPLICE = 0\n\nexport type AppCardInfoProps = {\n  appId: string\n  radius?: string | number\n  padding?: string | number\n}\nconst AppCardInfo = ({\n  appId,\n  radius = '0 0 12px 12px',\n  padding = '28px 16px 12px 16px',\n}: AppCardInfoProps) => {\n  const register = useRegister()\n  const appIds = useAppIds()\n  const onInstallApp = useInstallApp(appId)\n  const onGoToApp = useGoToApp({ appId })\n  const onOpenAppDetail = useGoToStore()\n\n  const { name, verified, description, tags } = useMemo(\n    () => register[appId] || ({} as ComponentManifest),\n    [register, appId],\n  )\n  const installed = useMemo(() => appIds.includes(appId), [appIds, appId])\n\n  const onOpen = useCallback(\n    async (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n\n      return onGoToApp()\n    },\n    [onGoToApp],\n  )\n\n  return (\n    <Card\n      bordered={false}\n      style={{\n        boxShadow: 'unset',\n        borderRadius: radius,\n        cursor: 'pointer',\n      }}\n      bodyStyle={{\n        padding,\n      }}\n      onClick={() => onOpenAppDetail({ appId })}\n    >\n      <Row align=\"top\" gutter={[8, 8]}>\n        <Col span={24}>\n          <Row gutter={[16, 16]} wrap={false}>\n            <Col>\n              <AppIcon size={52} appId={appId} name={false} />\n            </Col>\n            <Col flex=\"auto\">\n              {/* Don't use Space tag, because Typography ellipsis not working */}\n              <Row gutter={[2, 2]}>\n                <Col>\n                  <Typography.Title ellipsis={{ tooltip: true }} level={5}>\n                    {name} <Verification verified={verified} />\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <AppTags\n                    tags={[...tags].splice(START_SPLICE, LIMIT_TAG)}\n                    wrap={false}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              {installed ? (\n                <Button\n                  ghost\n                  size=\"small\"\n                  onClick={onOpen}\n                  id=\"open-action-button\"\n                >\n                  Open\n                </Button>\n              ) : (\n                <Button\n                  type=\"primary\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onInstallApp()\n                  }}\n                  size=\"small\"\n                  id=\"install-action-button\"\n                >\n                  Install\n                </Button>\n              )}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Text type=\"secondary\" ellipsis={{ tooltip: true }}>\n            {description}\n          </Typography.Text>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default AppCardInfo\n","import { CSSProperties } from 'react'\n\nimport { Card, Col, Row } from 'antd'\nimport { MultiStaticLoader } from 'components/staticLoader'\nimport FlexibleCard from 'components/flexibleCard'\nimport AppCardInfo from 'components/appCardInfo'\n\nimport { useGoToStore } from 'hooks/useGotoStore'\n\nimport imgError from 'static/images/error-image.svg'\n\nexport type CardHotAppCardProps = {\n  appId: string\n  style?: CSSProperties\n}\n\nconst CardHotAppCard = ({ appId, style = {} }: CardHotAppCardProps) => {\n  const onOpen = useGoToStore()\n\n  return (\n    <Row>\n      <Col span={24}>\n        <MultiStaticLoader\n          defaultData={[imgError]}\n          appId={appId}\n          type=\"panels\"\n          render={(data) => (\n            <FlexibleCard type=\"purple\" className=\"hoverable-transform\">\n              <Row gutter={0}>\n                <Col span={24} style={{ zIndex: 1 }}>\n                  <Card\n                    style={{\n                      backgroundImage: `url(${data[0] || imgError})`,\n                      backgroundPosition: 'center',\n                      backgroundRepeat: 'no-repeat',\n                      backgroundSize: 'cover',\n                      cursor: 'pointer',\n                      overflow: 'hidden',\n                      boxShadow: 'none',\n                      borderRadius: 12,\n                      ...style,\n                    }}\n                    bordered={false}\n                    bodyStyle={{ padding: 0 }}\n                    key={appId}\n                    onClick={() => onOpen({ appId })}\n                  />\n                </Col>\n                <Col span={24} style={{ top: -16, zIndex: 0 }}>\n                  <AppCardInfo appId={appId} />\n                </Col>\n              </Row>\n            </FlexibleCard>\n          )}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default CardHotAppCard\n","import { useMemo } from 'react'\nimport { Infix, useRegister, useWidth } from '@sentre/senhub'\nimport { SwiperOs } from 'components/swiperOS'\nimport { SwiperSlide } from 'swiper/react'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport CardHotAppCard from './cardHotApp'\nimport IonIcon from '@sentre/antd-ionicon'\n\nconst SENTRE_TAG = 'sentre'\nconst HEIGHT_RATIO = 0.75\nconst MOBILE_WIDTH_RATIO = 0.85\nconst SCREEN_RATIO = 22 / 24\nconst ELEMENT_SPACING = 12\nconst ITEM_SPACING = 24\nconst ITEM_BODY_SPACING = 26\n\nconst HotApps = () => {\n  const width = useWidth()\n  const register = useRegister()\n\n  const slidePerViews = useMemo(() => {\n    if (width > 1430) return 4\n    if (width > Infix.lg) return 3\n    if (width > Infix.md) return 2\n    return 'auto'\n  }, [width])\n\n  const slideMobile = useMemo(() => {\n    if (width < Infix.md) return { width: '85vw' }\n    return {}\n  }, [width])\n\n  const screenWidth = useMemo(\n    () => (width < Infix.xl ? width : width * SCREEN_RATIO),\n    [width],\n  )\n\n  const cardHeight = useMemo(() => {\n    if (slidePerViews === 'auto')\n      return (width * MOBILE_WIDTH_RATIO - ITEM_BODY_SPACING) * HEIGHT_RATIO\n\n    return (\n      ((screenWidth -\n        ELEMENT_SPACING * 2 -\n        (slidePerViews - 1) * ITEM_SPACING) /\n        slidePerViews -\n        ITEM_BODY_SPACING) *\n      HEIGHT_RATIO\n    )\n  }, [screenWidth, slidePerViews, width])\n\n  const hotAppIds = useMemo(() => {\n    if (!register) return []\n    return Object.keys(register).sort((a) => {\n      const app = register[a]\n      if (app?.tags.includes(SENTRE_TAG)) return -1\n      return 1\n    })\n  }, [register])\n\n  return (\n    <Row gutter={[24, 12]}>\n      <Col span={24}>\n        <Row justify=\"space-between\">\n          <Col>\n            <Typography.Title level={2}>Hot 🔥🔥🔥</Typography.Title>\n          </Col>\n          <Col>\n            <Space>\n              {/* Button previous slide */}\n              <Button\n                shape=\"circle\"\n                style={{ border: 'none' }}\n                className=\"swiper-prev-element\"\n                icon={<IonIcon name=\"chevron-back-outline\" />}\n              />\n              {/* Button next slide */}\n              <Button\n                shape=\"circle\"\n                style={{ border: 'none' }}\n                className=\"swiper-next-element\"\n                icon={<IonIcon name=\"chevron-forward-outline\" />}\n              />\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      {/* Apps in the category */}\n      <Col span={24}>\n        <SwiperOs slidesPerView={slidePerViews}>\n          {hotAppIds.map((appId) => (\n            <SwiperSlide key={appId} style={{ paddingTop: 12, ...slideMobile }}>\n              <CardHotAppCard appId={appId} style={{ height: cardHeight }} />\n            </SwiperSlide>\n          ))}\n        </SwiperOs>\n      </Col>\n    </Row>\n  )\n}\n\nexport default HotApps\n","import { Col, Empty, Row, Typography } from 'antd'\nimport AppCardInfo from 'components/appCardInfo'\nimport FlexibleCard, { FlexibleCardType } from 'components/flexibleCard'\n\nimport { CategoryOptions, useAppCategory } from './hooks'\n\ntype ListAppProps = {\n  title?: string\n  type?: FlexibleCardType\n} & CategoryOptions\nconst ListApp = ({ title, type = 'green', ...options }: ListAppProps) => {\n  const { title: suggestTitle, appIds: suggestAppIds } = useAppCategory(options)\n\n  if (!suggestAppIds.length) return <Empty />\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Typography.Title level={2} style={{ textTransform: 'capitalize' }}>\n          {title || suggestTitle}\n        </Typography.Title>\n      </Col>\n      {suggestAppIds.map((appId, idx) => (\n        <Col xs={24} md={12} xl={8} xxl={6} key={idx}>\n          <FlexibleCard type=\"green\" className=\"hoverable-transform\">\n            <AppCardInfo appId={appId} radius={12} />\n          </FlexibleCard>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default ListApp\n","import { useMemo } from 'react'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { Navigation, Grid } from 'swiper'\nimport { Infix, useWidth } from '@sentre/senhub'\n\nimport IonIcon from '@sentre/antd-ionicon'\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport AppCardInfo from 'components/appCardInfo'\nimport FlexibleCard from 'components/flexibleCard'\n\nimport { CategoryOptions, useAppCategory } from './hooks'\n\ntype SwiperListAppProps = {\n  title?: string\n  navigation?: boolean\n  rows?: number\n  spacing?: number\n} & CategoryOptions\nconst SwiperListApp = ({\n  title,\n  navigation = false,\n  rows = 2,\n  spacing = 24,\n  ...options\n}: SwiperListAppProps) => {\n  const width = useWidth()\n  const { title: suggestTitle, appIds: suggestAppIds } = useAppCategory(options)\n\n  const { title: displayTitle, lowerTitle } = useMemo(() => {\n    const nextTitle = title || suggestTitle\n    const lowerTitle = nextTitle.toLowerCase().replace(/\\s/g, '-')\n    return { title: nextTitle, lowerTitle }\n  }, [suggestTitle, title])\n\n  const slicePerView = useMemo(() => {\n    if (width < Infix.md) return 1\n    if (width < Infix.lg) return 2\n    if (width < 1390) return 3\n    return 4\n  }, [width])\n\n  return (\n    <Row gutter={[24, 12]}>\n      <Col span={24}>\n        <Row justify=\"space-between\">\n          <Col>\n            <Typography.Title level={2} style={{ textTransform: 'capitalize' }}>\n              {displayTitle}\n            </Typography.Title>\n          </Col>\n          {navigation && (\n            <Col>\n              <Space>\n                <Button\n                  shape=\"circle\"\n                  style={{ border: 'none' }}\n                  icon={<IonIcon name=\"chevron-back-outline\" />}\n                  className={`${lowerTitle}-explore-app-swiper-prev`}\n                />\n                <Button\n                  shape=\"circle\"\n                  style={{ border: 'none' }}\n                  icon={<IonIcon name=\"chevron-forward-outline\" />}\n                  className={`${lowerTitle}-explore-app-swiper-next`}\n                />\n              </Space>\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Swiper\n          modules={[Grid, Navigation]}\n          grid={{ rows: rows, fill: 'row' }}\n          slidesPerView={slicePerView}\n          spaceBetween={spacing}\n          navigation={{\n            nextEl: `.${lowerTitle}-explore-app-swiper-next`,\n            prevEl: `.${lowerTitle}-explore-app-swiper-prev`,\n          }}\n          style={{ paddingTop: 12 }}\n          className=\"apps-grid-view\"\n          lazy\n        >\n          {suggestAppIds.map((appId, idx) => (\n            <SwiperSlide key={idx}>\n              <FlexibleCard type=\"green\" className=\"hoverable-transform\">\n                <AppCardInfo appId={appId} radius={12} padding={12} />\n              </FlexibleCard>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </Col>\n    </Row>\n  )\n}\n\nexport default SwiperListApp\n","import { CategoryOptions } from './hooks'\nimport ListApp from './listApp'\nimport SwiperListApp from './swiperListApp'\n\ntype ListAppByCategoriesProps = {\n  title?: string\n  navigation?: boolean\n  rows?: number\n  spacing?: number\n  swiper?: boolean\n} & CategoryOptions\n\nconst ListAppByCategories = ({\n  title,\n  navigation = false,\n  rows = 2,\n  spacing = 24,\n  swiper = true,\n  ...options\n}: ListAppByCategoriesProps) => {\n  if (!swiper) return <ListApp title={title} {...options} />\n\n  return (\n    <SwiperListApp\n      title={title}\n      rows={rows}\n      spacing={spacing}\n      navigation={navigation}\n      {...options}\n    />\n  )\n}\n\nexport default ListAppByCategories\n","import { useMemo } from 'react'\nimport { useTheme } from '@sentre/senhub'\n\nimport { Avatar, Card, Col, Row, Space, Typography } from 'antd'\nimport AppIcon from 'components/appIcon'\n\nconst BG_COLOR_1 =\n  'radial-gradient(circle 90px at 80% 60%, rgb(83 127 255 / 40%), transparent)'\nconst BG_COLOR_2 =\n  'radial-gradient(circle 90px at 80% 60%, rgb(57 116 184 / 40%), transparent)'\nconst BG_COLOR_3 =\n  'radial-gradient(circle 90px at 80% 60%, rgb(117 81 236 / 40%), transparent)'\n\nexport type DataTweet = {\n  name: string\n  reweet: string\n  tag: string\n  appId: string\n  avatar: string\n}\nexport type CardTwitterProps = {\n  indexColor?: number\n  data: DataTweet\n}\n\nconst CardTwitter = ({ indexColor = 0, data }: CardTwitterProps) => {\n  const theme = useTheme()\n\n  const cardBackground = useMemo(() => {\n    switch (indexColor) {\n      case 1:\n        return BG_COLOR_1\n      case 2:\n        return BG_COLOR_2\n      case 3:\n        return BG_COLOR_3\n      default:\n        return BG_COLOR_1\n    }\n  }, [indexColor])\n\n  return (\n    <Card\n      bordered={false}\n      style={{\n        height: '100%',\n        background: theme === 'light' ? '#FFF' : undefined,\n        boxShadow: 'none',\n      }}\n      bodyStyle={{\n        height: '100%',\n        background: cardBackground,\n      }}\n      className=\"card-twitter hoverable-transform\"\n    >\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col>\n          <Avatar size={44} src={data.avatar} />\n        </Col>\n        <Col flex=\"auto\">\n          <Space size={4} direction=\"vertical\">\n            <Typography.Text strong>{data.name}</Typography.Text>\n            <Typography.Text type=\"secondary\">{data.tag}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph ellipsis={{ rows: 5 }}>\n            {data.reweet}\n          </Typography.Paragraph>\n        </Col>\n        {!!data.appId && (\n          <Col span={24}>\n            <Card\n              style={{\n                borderRadius: 8,\n                background: 'transparent',\n                boxShadow: 'unset',\n              }}\n              bodyStyle={{ padding: '12px 16px' }}\n            >\n              <AppIcon size={24} direction=\"horizontal\" appId={data.appId} />\n            </Card>\n          </Col>\n        )}\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardTwitter\n","import { useMemo } from 'react'\nimport { Infix, useWidth } from '@sentre/senhub'\n\nimport { Row, Col, Typography } from 'antd'\n\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { Navigation, Pagination } from 'swiper'\nimport CardTwitter from './cardTwitter'\n\nimport './index.less'\n\nconst LIST_TWITTER = [\n  {\n    name: 'Chris Tian',\n    tag: '@Stirail · Jul 24',\n    reweet:\n      'This is the moment we all have been waiting for! Us = with no more funds to buy more SOL hihihihi',\n    appId: 'any_arts',\n    avatar:\n      'https://pbs.twimg.com/profile_images/1531595293946683392/iozpRS2F_400x400.jpg',\n  },\n  {\n    name: '𝐒𝐎𝐋𝐀𝐍𝐀 𝐔𝐍𝐈𝐕𝐄𝐑𝐒𝐄 🧬',\n    tag: '@SolanaUnivers',\n    reweet: `🔥\n      @SentreProtocol\n       is an All-in-One \n      @Solana\n       open platform with #dApps Store and Universal Protocol for Liquidity!\n      \n      🔥 $SNTR TOKEN UTILITY UPDATE \n      \n      ♻️Revenue Sharing\n      ⛏️Mining Tokens\n      \n      🔽INFO\n      https://sentre.io/#/home`,\n    appId: '',\n    avatar:\n      'https://pbs.twimg.com/profile_images/1527303517589086209/ZPbM5Gk__400x400.jpg',\n  },\n  {\n    name: 'Thien Nguyen',\n    tag: '@ThienNV_DesNet',\n    reweet: `Really surprised at the cost and sending speed of Lightning Tunnel. A retweet for \n    @SentreProtocol\n      ⚡️⚡️⚡️`,\n    appId: 'lightning_tunnel',\n    avatar:\n      'https://pbs.twimg.com/profile_images/1506533084728291328/TyE_CSfQ_400x400.jpg',\n  },\n  {\n    name: 'Thanh Tuấn Lê',\n    tag: '@Tuanle1899',\n    reweet:\n      'Amazing! No code, no platform needed for DAO with vote by NFT and token. I think it’s a good solution for the project, frens 🤟',\n    appId: 'interdao',\n    avatar:\n      'https://pbs.twimg.com/profile_images/1469313225707573248/cKhPXTWE_400x400.jpg',\n  },\n]\n\nconst MentionsOnTwitter = () => {\n  const width = useWidth()\n\n  const calculatePerCard = useMemo(() => {\n    if (width < Infix.md) return 1\n    if (width < Infix.lg) return 2\n    return 3\n  }, [width])\n\n  const listTwitterRender = () => {\n    let indexColor = 0\n    return LIST_TWITTER.map((data, idx) => {\n      if (indexColor === 3) indexColor = 0\n      indexColor++\n      return (\n        <SwiperSlide\n          style={{\n            cursor: 'pointer',\n            height: 260,\n          }}\n          key={idx}\n        >\n          <CardTwitter data={data} indexColor={indexColor} />\n        </SwiperSlide>\n      )\n    })\n  }\n\n  return (\n    <Row gutter={[24, 12]} align=\"bottom\">\n      {/* Title */}\n      <Col span={24}>\n        <Typography.Title level={2}>Mentions On Twitter</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Swiper\n          className=\"twitter-mention-swiper\"\n          slidesPerView={calculatePerCard}\n          spaceBetween={24}\n          navigation={false}\n          pagination={{\n            clickable: true,\n            type: 'bullets',\n            renderBullet: function (index, className) {\n              return `<span class=\"${className} indicator\" key=\"${index}\"></span>`\n            },\n          }}\n          modules={[Navigation, Pagination]}\n          style={{ paddingTop: 12 }}\n        >\n          {listTwitterRender()}\n        </Swiper>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MentionsOnTwitter\n","import { useWalletAddress, util } from '@sentre/senhub'\n\nconst useWalletConnected = () => {\n  const walletAddress = useWalletAddress()\n  return util.isAddress(walletAddress)\n}\n\nexport default useWalletConnected\n","import { useEffect, useMemo } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRegister } from '@sentre/senhub'\n\nimport { Row, Col } from 'antd'\nimport TopBanner from './topBanner'\nimport BottomBanner from './bottomBanner'\nimport Trending from './trending'\nimport NewListedApp from './newListedApp'\nimport ListingApp from './listingApp'\nimport HotApps from './hotApps'\nimport ListAppByCategories from './listAppByCategories'\nimport MentionsOnTwitter from 'view/appInfo/mentionsOnTwitter'\n\nimport { CustomCategory } from './listAppByCategories/hooks'\nimport useWalletConnected from 'hooks/useWalletConnected'\n\nconst Market = () => {\n  const { search } = useLocation()\n  const resgister = useRegister()\n  const history = useHistory()\n  const walletConnected = useWalletConnected()\n\n  const category = useMemo(\n    () => new URLSearchParams(search).get('category'),\n    [search],\n  )\n\n  // Redirect callback\n  useEffect(() => {\n    const {\n      location: { search },\n    } = history\n    const params = new URLSearchParams(search)\n    const paramRedirect = params.get('redirect')\n    if (!paramRedirect) return\n    let redirect = decodeURIComponent(paramRedirect)\n    if (walletConnected) history.push(redirect)\n  }, [history, walletConnected])\n\n  if (category)\n    return <ListAppByCategories swiper={false} category={category} />\n\n  return (\n    <Row gutter={[16, 48]} justify=\"center\">\n      <Col span={24} className=\"sentre-col-container\">\n        <Row gutter={[16, 48]}>\n          <Col span={24}>\n            <TopBanner />\n          </Col>\n          <Col span={24}>\n            <HotApps />\n          </Col>\n          {/* Popular on Twitter */}\n          <Col span={24}>\n            <ListAppByCategories\n              category={CustomCategory.suggest}\n              related={{ appIds: Object.keys(resgister).splice(0, 5) }}\n              title=\"Popular on Twitter\"\n            />\n          </Col>\n          {/* Mentions twitter */}\n          <Col span={24}>\n            <MentionsOnTwitter />\n          </Col>\n          <Col span={24}>\n            <Trending />\n          </Col>\n          <Col span={24}>\n            <NewListedApp />\n          </Col>\n          <Col span={24}>\n            <ListingApp />\n          </Col>\n          <Col span={24}>\n            <BottomBanner />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Market\n","import { useEffect, useCallback, useState, Fragment, useMemo } from 'react'\nimport { Remarkable } from 'remarkable'\n\nimport { Row, Col, Typography, Modal } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { StaticLoader } from 'components/staticLoader'\n\nconst ReadMoreModal = ({ content }: { content: string }) => {\n  const [visible, setVisible] = useState(false)\n\n  return (\n    <Fragment>\n      <Typography.Text\n        style={{ cursor: 'pointer', color: '#F9575E' }}\n        onClick={() => setVisible(true)}\n        type=\"danger\"\n      >\n        Read more\n      </Typography.Text>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        closeIcon={<IonIcon name=\"close\" />}\n        footer={null}\n        centered\n        bodyStyle={{ padding: 32 }}\n        className=\"readmore-modal\"\n      >\n        <Row gutter={[20, 20]}>\n          <Col span={24}>\n            <Typography.Title level={4}>Description</Typography.Title>\n          </Col>\n          <Col span={24}>\n            <div dangerouslySetInnerHTML={{ __html: content }} />\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nconst Markdown = ({ src }: { src: string }) => {\n  const [text, setText] = useState('')\n\n  const fetchData = useCallback(async () => {\n    let txt = ''\n    try {\n      // Parse data\n      if (!src) throw new Error('Invalid source url ')\n      txt = await (await fetch(src)).text()\n    } catch (er) {\n      txt = 'Cannot load the README.md'\n    }\n    setText(txt)\n  }, [src])\n\n  const innerHtml = useMemo(() => {\n    const md = new Remarkable({ html: true })\n    return md.render(text)\n  }, [text])\n  const lineCount = useMemo(() => text.match(/\\r?\\n/g), [text])\n\n  const isShowReadMore = useMemo(() => {\n    if (lineCount && lineCount.length > 3) return true\n    if (text.length > 200) return true\n\n    return false\n  }, [lineCount, text.length])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  return (\n    <Row>\n      <Col className=\"readme-loader\" span={24}>\n        <div dangerouslySetInnerHTML={{ __html: innerHtml }} />\n        {isShowReadMore && <div className=\"read-more\" />}\n      </Col>\n      {isShowReadMore && (\n        <Col span={24}>\n          <ReadMoreModal content={innerHtml} />\n        </Col>\n      )}\n    </Row>\n  )\n}\n\nexport type ReadmeLoaderProps = {\n  appId: string\n}\n\nconst ReadmeLoader = (props: ReadmeLoaderProps) => {\n  const { appId } = props\n  return (\n    <StaticLoader\n      type=\"readme\"\n      appId={appId}\n      render={(src) => <Markdown src={src} />}\n    />\n  )\n}\n\nexport default ReadmeLoader\n","import { Fragment, useMemo } from 'react'\nimport {\n  useGoToApp,\n  useInstallApp,\n  useUninstallApp,\n  useInfix,\n  Infix,\n} from '@sentre/senhub'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nexport type InstalledAppProps = {\n  installed: boolean\n  appId: string\n}\n\nconst InstalledApp = ({ installed, appId }: InstalledAppProps) => {\n  const opOpen = useGoToApp({ appId })\n  const onInstall = useInstallApp(appId)\n  const onUninstall = useUninstallApp(appId)\n  const infix = useInfix()\n\n  const isMobile = infix < Infix.sm\n  const justify = useMemo(() => (isMobile ? 'start' : 'end'), [isMobile])\n\n  return (\n    <Row gutter={[12, 12]} justify={justify}>\n      {installed ? (\n        <Fragment>\n          <Col span={isMobile ? 12 : undefined}>\n            <Button\n              icon={<IonIcon name=\"trash-outline\" />}\n              onClick={onUninstall}\n              block={isMobile}\n              ghost\n            >\n              Uninstall\n            </Button>\n          </Col>\n\n          <Col span={isMobile ? 12 : undefined}>\n            <Button\n              type=\"primary\"\n              icon={<IonIcon name=\"open-outline\" />}\n              onClick={opOpen}\n              block={isMobile}\n            >\n              Open\n            </Button>\n          </Col>\n        </Fragment>\n      ) : (\n        <Col span={isMobile ? 24 : undefined}>\n          <Button\n            type=\"primary\"\n            icon={<IonIcon name=\"download-outline\" />}\n            onClick={onInstall}\n            block={isMobile}\n          >\n            Install\n          </Button>\n        </Col>\n      )}\n    </Row>\n  )\n}\n\nexport default InstalledApp\n","import { Space, Typography } from 'antd'\n\nexport type ExtraTypographyProps = {\n  label: string\n  title?: string\n}\n\nconst ExtraTypography = ({ label, title }: ExtraTypographyProps) => {\n  return (\n    <Space>\n      <Typography.Text type=\"secondary\">{label}:</Typography.Text>\n      <Typography.Text>{title}</Typography.Text>\n    </Space>\n  )\n}\n\nexport type AppAuthorProps = {\n  author?: { name?: string; email?: string }\n}\n\nconst AppAuthor = ({ author }: AppAuthorProps) => {\n  const { name, email } = author || {}\n\n  return (\n    <Space direction=\"vertical\" size={4}>\n      <ExtraTypography label=\"Author\" title={name} />\n      <ExtraTypography label=\"Support\" title={email} />\n    </Space>\n  )\n}\n\nexport default AppAuthor\n","import { useCallback, useMemo, useState } from 'react'\nimport { useRegister, util } from '@sentre/senhub'\nimport copy from 'copy-to-clipboard'\n\nimport {\n  Button,\n  Col,\n  Image,\n  Input,\n  Row,\n  Space,\n  Tooltip,\n  Typography,\n  Modal,\n} from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport Telegram from 'static/images/social/telegram.png'\nimport Twitter from 'static/images/social/twitter.png'\n\nexport type ShareModalProps = {\n  appId: string\n  shareWith: string\n  visible: boolean\n  onClose: () => void\n}\n\nconst ShareModal = ({\n  appId,\n  shareWith,\n  visible,\n  onClose,\n}: ShareModalProps) => {\n  const [copied, setCopied] = useState(false)\n  const register = useRegister()\n\n  const { name } = useMemo(\n    () => register[appId] || ({} as ComponentManifest),\n    [register, appId],\n  )\n\n  const onShare = useCallback(\n    (url?: string) => {\n      const params: Record<string, string> = {\n        url: window.location.href,\n        text: name || '',\n      }\n      for (const prop in params)\n        url += '&' + prop + '=' + encodeURIComponent(params[prop] || '')\n      window.open(\n        url,\n        '_blank',\n        'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0',\n      )\n    },\n    [name],\n  )\n  const onClick = useCallback(\n    (type?: string) => {\n      let telegramURL = 'https://telegram.me/share/url?'\n      let twitterURL = 'http://twitter.com/intent/tweet?'\n      if (type === 'twitter') return onShare(twitterURL)\n      return onShare(telegramURL)\n    },\n    [onShare],\n  )\n  const onCopy = useCallback(async (text: string) => {\n    copy(text)\n    setCopied(true)\n    await util.asyncWait(1500)\n    return setCopied(false)\n  }, [])\n\n  const shareLogo = useMemo(() => {\n    if (shareWith === 'twitter') return Twitter\n    return Telegram\n  }, [shareWith])\n\n  return (\n    <Modal\n      closable={false}\n      visible={visible}\n      onCancel={() => onClose()}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n      centered\n      bodyStyle={{ padding: 32 }}\n    >\n      <Row gutter={[20, 20]} justify=\"center\" style={{ textAlign: 'center' }}>\n        <Col>\n          <Image src={shareLogo} preview={false} style={{ width: 56 }} />\n        </Col>\n        <Col span={24}>\n          <Typography.Title level={3}>Share this application</Typography.Title>\n          <Typography.Text>Copy your link or share now!</Typography.Text>\n        </Col>\n        <Col span={16}>\n          <Input\n            suffix={\n              <Tooltip title=\"Copied\" visible={copied}>\n                <Button\n                  type=\"text\"\n                  size=\"small\"\n                  icon={<IonIcon name=\"copy-outline\" />}\n                  onClick={() => onCopy(window.location.href)}\n                />\n              </Tooltip>\n            }\n            value={window.location.href}\n          />\n        </Col>\n        <Col>\n          <Space>\n            <Button className=\"btn-share\" onClick={() => onClose()}>\n              Cancel\n            </Button>\n            <Button\n              type=\"primary\"\n              className=\"btn-share\"\n              onClick={() => onClick(shareWith)}\n            >\n              Share now\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ShareModal\n","import { useState } from 'react'\n\nimport { Button, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ShareModal from './shareModal'\n\nexport type AppShareProps = { appId: string }\n\nconst AppShare = ({ appId }: AppShareProps) => {\n  const [shareWith, setShareWith] = useState('')\n  const [visible, setVisible] = useState(false)\n\n  const onOpenModal = (type: string) => {\n    setVisible(true)\n    setShareWith(type)\n  }\n\n  return (\n    <Space>\n      <Button\n        type=\"text\"\n        className=\"btn-icon\"\n        icon={<IonIcon name=\"logo-twitter\" />}\n        onClick={() => onOpenModal('twitter')}\n      />\n      <Button\n        type=\"text\"\n        className=\"btn-icon\"\n        icon={<IonIcon name=\"logo-telegram\" />}\n        onClick={() => onOpenModal('telegram')}\n      />\n      <ShareModal\n        appId={appId}\n        shareWith={shareWith}\n        visible={visible}\n        onClose={() => setVisible(false)}\n      />\n    </Space>\n  )\n}\n\nexport default AppShare\n","import { useMemo } from 'react'\nimport {\n  useRegister,\n  useAppIds,\n  useWalletAddress,\n  useInfix,\n  Infix,\n} from '@sentre/senhub'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Typography, Space } from 'antd'\nimport AppIcon from 'components/appIcon'\nimport Verification from 'components/verification'\nimport ReadmeLoader from 'components/readmeLoader'\nimport InstalledApp from './installedApp'\nimport AppTags from './appTags'\nimport AppAuthor from './appAuthor'\nimport AppShare from './appShare'\n\nconst AppDetails = ({ appId }: { appId: string }) => {\n  const register = useRegister()\n  const appIds = useAppIds()\n  const walletAddress = useWalletAddress()\n\n  const { author, name, tags, verified } = useMemo(\n    () => register[appId] || ({} as ComponentManifest),\n    [register, appId],\n  )\n  const infix = useInfix()\n\n  const isMobile = infix < Infix.sm\n  const floatSocialButton = useMemo(\n    () => (isMobile ? 'start' : 'end'),\n    [isMobile],\n  )\n  const installed = useMemo(\n    () => account.isAddress(walletAddress) && appIds.includes(appId),\n    [walletAddress, appIds, appId],\n  )\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]}>\n          <Col span={isMobile ? 24 : 14}>\n            <Row gutter={[32, 24]} wrap={false}>\n              <Col>\n                <AppIcon appId={appId} size={96} name={false} />\n              </Col>\n              <Col flex=\"auto\">\n                <Space direction=\"vertical\" size={16}>\n                  <Space align=\"center\">\n                    <Typography.Title level={2}>{name}</Typography.Title>\n                    <Verification verified={verified} />\n                  </Space>\n                  <AppTags tags={tags} />\n                </Space>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={isMobile ? 24 : 10}>\n            <Row gutter={[16, 16]} justify={floatSocialButton}>\n              <Col span={24}>\n                <InstalledApp appId={appId} installed={installed} />\n              </Col>\n              <Col>\n                <AppShare appId={appId} />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <AppAuthor author={author} />\n      </Col>\n      <Col span={24}>\n        <ReadmeLoader appId={appId} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default AppDetails\n","import { useCallback } from 'react'\nimport { useWidth } from '@sentre/senhub'\n\nimport { Col, Image, Row } from 'antd'\nimport { SwiperSlide } from 'swiper/react'\nimport { SwiperOs } from 'components/swiperOS'\n\nimport { MultiStaticLoader } from 'components/staticLoader'\n\nimport imgError from 'static/images/error-image.svg'\n\nconst PADDING_CARD = 24\nconst PADDING_PAGE = 39 // padding 24 + width scroll bar 15\n\nconst ScreenShot = ({ appId }: { appId: string }) => {\n  const width = useWidth()\n\n  const calculatePerCard = useCallback(() => {\n    if (width < 768) return 1\n    return 2\n  }, [width])\n  const calculateHeightImage = useCallback(() => {\n    if (width > 991)\n      return (\n        (3 *\n          (((width - PADDING_PAGE - PADDING_CARD) / 2 - PADDING_CARD) / 2 -\n            12)) /\n        4\n      )\n    if (width <= 767)\n      return (3 * (width - PADDING_PAGE - PADDING_CARD - PADDING_CARD)) / 4\n    return (3 * ((width - PADDING_PAGE - PADDING_CARD) / 2 - PADDING_CARD)) / 4\n  }, [width])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\" className=\"app-detail-carousel\">\n      <Col span={24}>\n        <MultiStaticLoader\n          appId={appId}\n          type=\"panels\"\n          defaultData={[imgError]}\n          render={(data) => {\n            return (\n              <SwiperOs slidesPerView={calculatePerCard()}>\n                {data.map((src, idx) => (\n                  <SwiperSlide key={idx}>\n                    <Image\n                      style={{ height: calculateHeightImage() }}\n                      src={src}\n                    />\n                  </SwiperSlide>\n                ))}\n              </SwiperOs>\n            )\n          }}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ScreenShot\n","import { useCallback, useEffect, useMemo } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport { Row, Col, Card, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport AppDetails from './appDetails'\nimport ScreenShot from './screenshot'\nimport MentionsOnTwitter from './mentionsOnTwitter'\nimport ListAppByCategories from 'view/market/listAppByCategories'\n\nimport { CustomCategory } from '../market/listAppByCategories/hooks'\nimport configs from 'configs'\nimport './index.less'\n\nconst {\n  manifest: { appId: appStoreId },\n} = configs\n\nconst AppViewer = () => {\n  const history = useHistory()\n  const { appId } = useParams<{ appId: string }>()\n  const related = useMemo(() => {\n    return { appIds: [appId] }\n  }, [appId])\n\n  const onBack = useCallback(() => history.goBack(), [history])\n\n  useEffect(() => {\n    if (appStoreId === appId) history.push('/app/' + appStoreId)\n  }, [appId, history])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col span={24} className=\"sentre-col-container\">\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              onClick={onBack}\n              style={{ marginLeft: -7 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Card bordered={false}>\n              <Row gutter={[24, 24]}>\n                <Col xs={24} lg={12}>\n                  <AppDetails appId={appId} />\n                </Col>\n                <Col xs={24} lg={12}>\n                  <ScreenShot appId={appId} />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col span={24}>\n            <MentionsOnTwitter />\n          </Col>\n          <Col span={24}>\n            <ListAppByCategories\n              category={CustomCategory.suggest}\n              navigation\n              related={related}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default AppViewer\n","import { useAppIds } from '@sentre/senhub'\n\nimport { Col, Empty, Row } from 'antd'\nimport AppCardInfo from 'components/appCardInfo'\nimport FlexibleCard from 'components/flexibleCard'\n\nconst ListYourApp = () => {\n  const appIds = useAppIds()\n\n  if (!appIds.length) return <Empty />\n\n  return (\n    <Row gutter={[24, 24]}>\n      {appIds.map((appId, idx) => (\n        <Col xs={24} sm={12} md={12} lg={8} key={idx}>\n          <FlexibleCard type=\"green\" className=\"hoverable-transform\">\n            <AppCardInfo appId={appId} padding={12} radius={12} />\n          </FlexibleCard>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default ListYourApp\n","import { useAppIds } from '@sentre/senhub'\n\nimport { Col, Row, Typography } from 'antd'\nimport ListAppByCategories from 'view/market/listAppByCategories'\nimport ListYourApp from './listYourApp'\n\nimport { CustomCategory } from 'view/market/listAppByCategories/hooks'\n\nconst YourApps = () => {\n  const yourAppIds = useAppIds()\n\n  return (\n    <Row gutter={[24, 64]}>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Typography.Title level={2}>Your DApps</Typography.Title>\n          </Col>\n          <Col span={24}>\n            <ListYourApp />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <ListAppByCategories\n          category={CustomCategory.suggest}\n          related={{ appIds: yourAppIds }}\n          navigation\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourApps\n","export enum AppCategories {\n  Overview = 'overview',\n  All = 'all',\n  Utility = 'utility',\n  Defi = 'defi',\n  Game = 'game',\n  Portfolio = 'portfolio',\n  DAO = 'dao',\n  Liquidity = 'liquidity',\n  Sentre = 'sentre',\n  Yours = 'Your DApps',\n  More = 'more',\n}\n\nexport const YOUR_DAPP = 'your-apps'\n\nexport enum QueryParams {\n  search = 'search',\n  category = 'category',\n}\n","import {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useInfix, Infix, useAppRoute } from '@sentre/senhub'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { Button, Card, Segmented, Space } from 'antd'\nimport { SegmentedValue } from 'antd/lib/segmented'\nimport IconSax from '@sentre/antd-iconsax'\n\nimport { useGoToStore } from 'hooks/useGotoStore'\nimport { AppCategories, QueryParams, YOUR_DAPP } from 'contant'\nimport configs from 'configs'\nimport IonIcon from '@sentre/antd-ionicon'\nimport useWalletConnected from 'hooks/useWalletConnected'\n\nconst {\n  manifest: { appId: appStoreId },\n} = configs\n\nconst CATEGORIES = [\n  {\n    icon: <IconSax name=\"Category\" variant=\"Bold\" />,\n    value: AppCategories.Overview,\n    label: AppCategories.Overview,\n  },\n  {\n    icon: <IconSax name=\"Magicpen\" variant=\"Bold\" />,\n    value: AppCategories.Utility,\n    label: AppCategories.Utility,\n  },\n  {\n    icon: <IconSax name=\"Chart21\" variant=\"Bold\" />,\n    value: AppCategories.Defi,\n    label: AppCategories.Defi,\n  },\n  {\n    icon: <IconSax name=\"Game\" variant=\"Bold\" />,\n    value: AppCategories.Game,\n    label: AppCategories.Game,\n  },\n  {\n    icon: <IconSax name=\"UserOctagon\" variant=\"Bold\" />,\n    value: AppCategories.Yours,\n    label: AppCategories.Yours,\n  },\n  {\n    icon: <IconSax name=\"MoreSquare\" variant=\"Bold\" />,\n    value: AppCategories.More,\n    label: AppCategories.More,\n  },\n  {\n    icon: <IconSax name=\"DirectNotification\" variant=\"Bold\" />,\n    value: AppCategories.All,\n    label: AppCategories.All,\n  },\n  {\n    icon: <IconSax name=\"CardCoin\" variant=\"Bold\" />,\n    value: AppCategories.Liquidity,\n    label: AppCategories.Liquidity,\n  },\n  {\n    icon: <IonIcon name=\"logo-sentre\" />,\n    value: AppCategories.Sentre,\n    label: AppCategories.Sentre,\n  },\n  {\n    icon: <IconSax name=\"FormatCircle\" variant=\"Bold\" />,\n    value: AppCategories.DAO,\n    label: AppCategories.DAO,\n  },\n\n  {\n    icon: <IconSax name=\"CpuCharge\" variant=\"Bold\" />,\n    value: AppCategories.Portfolio,\n    label: AppCategories.Portfolio,\n  },\n]\n\nconst MenuBar = () => {\n  const [activeSegmented, setActiveSegmented] = useState<SegmentedValue>(\n    AppCategories.Overview,\n  )\n  const [visible, setVisible] = useState(false)\n  const history = useHistory()\n  const onGoToStore = useGoToStore()\n  const location = useLocation()\n  const wrapperRef = useRef<HTMLDivElement>(null)\n  const { root, extend } = useAppRoute(appStoreId)\n  const walletConnected = useWalletConnected()\n  const infix = useInfix()\n\n  const query = useMemo(\n    () => new URLSearchParams(location.search),\n    [location.search],\n  )\n  const pathName = location.pathname\n  const isMobile = infix < Infix.lg\n  const urlCategory = query.get(QueryParams.category) || ''\n\n  const { showMoreCats, showedCats } = useMemo(() => {\n    let nextCategories = []\n    // Disabled button when wallet not connected\n    if (!isMobile)\n      nextCategories = CATEGORIES.map(({ icon, label, value }) => {\n        const disabled = !walletConnected && value === AppCategories.Yours\n        return { icon, label, value, disabled }\n      })\n    // Remove label on mobile\n    else\n      nextCategories = CATEGORIES.map(({ icon, value }) => {\n        const disabled = !walletConnected && value === AppCategories.Yours\n        return { icon, value, disabled }\n      })\n    // Splice showing and more categories to a different array\n    const indexOfMoreCat = nextCategories.findIndex(\n      ({ value }) => value === AppCategories.More,\n    )\n    const showedCats = nextCategories.splice(0, indexOfMoreCat + 1)\n    return {\n      showedCats,\n      showMoreCats: nextCategories,\n    }\n  }, [isMobile, walletConnected])\n\n  const onClick = useCallback(\n    (key: SegmentedValue) => {\n      setVisible(false)\n      switch (key) {\n        case AppCategories.More:\n          setActiveSegmented(key)\n          return setVisible(true)\n        case AppCategories.Overview:\n          setActiveSegmented(AppCategories.Overview)\n          return history.push(root)\n        case AppCategories.Yours:\n          setActiveSegmented(AppCategories.Yours)\n          return history.push(extend(`/${YOUR_DAPP}`, { absolutePath: true }))\n        case AppCategories.All:\n          setActiveSegmented(AppCategories.All)\n          return history.push(\n            extend(`/${AppCategories.All}`, { absolutePath: true }),\n          )\n        default:\n          setActiveSegmented(key)\n          return onGoToStore({ search: `?category=${key}` })\n      }\n    },\n    [extend, history, onGoToStore, root],\n  )\n\n  const onDefaultActiveSegmented = useCallback(() => {\n    if (pathName.endsWith(YOUR_DAPP))\n      return setActiveSegmented(AppCategories.Yours)\n\n    if (pathName.endsWith(AppCategories.All))\n      return setActiveSegmented(AppCategories.All)\n    if (!!urlCategory.length) {\n      return setActiveSegmented(urlCategory)\n    }\n  }, [pathName, urlCategory])\n\n  // Active segmented with category in url\n  useEffect(() => {\n    onDefaultActiveSegmented()\n  }, [onDefaultActiveSegmented])\n\n  return (\n    <Fragment>\n      <div style={{ width: '100%', position: 'relative' }} ref={wrapperRef}>\n        {visible && (\n          <div\n            style={{\n              position: 'absolute',\n              bottom: 'calc(100% + 4px)',\n              right: 0,\n            }}\n          >\n            <Card\n              className=\"show-more-card\"\n              bordered={false}\n              style={{ borderRadius: 8 }}\n              bodyStyle={{ padding: 12 }}\n            >\n              <Space direction=\"vertical\">\n                {showMoreCats.map(({ value, disabled, icon }, idx) => (\n                  <Button\n                    type=\"text\"\n                    style={{\n                      background: 'transparent',\n                      textTransform: 'capitalize',\n                    }}\n                    icon={icon}\n                    disabled={disabled}\n                    onClick={() => onClick(value)}\n                    key={idx}\n                  >\n                    {value}\n                  </Button>\n                ))}\n              </Space>\n            </Card>\n          </div>\n        )}\n        <Segmented\n          size=\"large\"\n          value={activeSegmented}\n          onChange={onClick}\n          options={showedCats}\n        />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default MenuBar\n","import lunr, { Index } from 'lunr'\n\nclass SearchEngine {\n  register: SenReg\n  index: Index\n\n  constructor(register: SenReg) {\n    this.register = register\n    this.index = lunr(function () {\n      // Document id\n      this.ref('appId')\n      // Indexed document\n      this.field('appId')\n      this.field('name')\n      this.field('description')\n      this.field('tags', {\n        extractor: (doc: any) => doc?.tags.join(' ') || '',\n      })\n      this.field('author:name', {\n        extractor: (doc: any) => doc?.author?.name || '',\n      })\n      this.field('author:email', {\n        extractor: (doc: any) => doc?.author?.email || '',\n      })\n      // Data\n      Object.keys(register).forEach((appId: string) => {\n        const appManifest = register[appId]\n        if (appManifest) this.add(appManifest)\n      })\n    })\n  }\n\n  search = (keyword: string, limit = 10) => {\n    let appIds: string[] = []\n    if (!keyword) return []\n    const fuzzy = `${keyword} *${keyword}*`\n    this.index.search(fuzzy).forEach(({ ref }) => {\n      if (!appIds.includes(ref)) return appIds.push(ref)\n    })\n    return appIds\n      .map((appId) => (this.register[appId] as ComponentManifest).appId)\n      .slice(0, limit)\n  }\n}\n\nexport default SearchEngine\n","import {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Infix, useInfix, useRegister, useTheme } from '@sentre/senhub'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Empty,\n  Input,\n  Row,\n  Space,\n  Spin,\n  Typography,\n} from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport AppIcon from 'components/appIcon'\nimport SearchEngine from './searchEngine'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport configs from 'configs'\nimport { QueryParams } from 'contant'\n\nconst {\n  manifest: { appId: appStoreId },\n} = configs\n\nlet searching: NodeJS.Timeout\n\ntype ButtonSearchProps = {\n  clearable?: boolean\n  onClick?: () => void\n  loading?: boolean\n}\nconst ButtonSearch = ({\n  clearable = false,\n  onClick = () => {},\n  loading = false,\n}: ButtonSearchProps) => {\n  if (loading)\n    return (\n      <Spin indicator={<LoadingOutlined style={{ fontSize: 18 }} spin />} />\n    )\n  if (clearable)\n    return (\n      <Button\n        type=\"text\"\n        size=\"small\"\n        icon={<IonIcon name=\"trash-outline\" />}\n        onClick={onClick}\n      />\n    )\n  return (\n    <Button\n      type=\"text\"\n      size=\"small\"\n      style={{ fontSize: 24 }}\n      icon={<IonIcon name=\"search-outline\" />}\n    />\n  )\n}\n\ntype MenuSearchProps = { closeabel?: boolean; onClose?: () => void }\nconst MenuSearch = ({\n  closeabel = false,\n  onClose = () => {},\n}: MenuSearchProps) => {\n  const [searchKey, setSearchKey] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [appIds, setAppIds] = useState<AppIds>([])\n  const [searchVisible, setSearchVisible] = useState(false)\n  const history = useHistory()\n  const register = useRegister()\n  const location = useLocation()\n  const wrapperRef = useRef<HTMLDivElement>(null)\n  const theme = useTheme()\n\n  const query = useMemo(\n    () => new URLSearchParams(location.search),\n    [location.search],\n  )\n  const urlSearchKeys = query.get(QueryParams.search) || ''\n  const engine = useMemo(() => new SearchEngine(register), [register])\n\n  const onSearch = useCallback(async () => {\n    try {\n      setLoading(true)\n      if (searching) clearTimeout(searching)\n      searching = await setTimeout(async () => {\n        if (!!searchKey.length) setSearchVisible(true)\n        const appIds = await engine.search(searchKey)\n        setAppIds(appIds)\n      }, 500)\n    } catch (err) {\n      //  Nothing\n    } finally {\n      setLoading(false)\n    }\n  }, [engine, searchKey])\n\n  const onPressEnter = useCallback(() => {\n    if (appIds.length > 0) history.push(`/app/${appStoreId}/${appIds[0]}`)\n  }, [appIds, history])\n\n  // using url search key for the first time\n  useEffect(() => {\n    ;(() => {\n      if (!!urlSearchKeys.length) setSearchKey(urlSearchKeys)\n    })()\n  }, [urlSearchKeys])\n\n  useEffect(() => {\n    onSearch()\n  }, [onSearch])\n\n  function assertIsNode(e: EventTarget | null): asserts e is Node {\n    if (!e || !('nodeType' in e)) {\n      throw new Error(`Node expected`)\n    }\n  }\n\n  useEffect(() => {\n    const ctxWrapper = wrapperRef.current\n    if (!ctxWrapper) return\n    document.addEventListener('click', ({ target }) => {\n      assertIsNode(target)\n      if (!ctxWrapper.contains(target)) setSearchVisible(false)\n    })\n    return () => document.removeEventListener('click', () => {})\n  }, [])\n\n  return (\n    <div style={{ position: 'relative' }} ref={wrapperRef}>\n      <Input\n        size=\"large\"\n        placeholder=\"Search dapp name, author\"\n        bordered={false}\n        onChange={(event) => setSearchKey(event.target.value)}\n        value={searchKey}\n        prefix={\n          <ButtonSearch\n            clearable={!!searchKey}\n            onClick={() => setSearchKey('')}\n            loading={loading}\n          />\n        }\n        suffix={\n          closeabel && (\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"close-outline\" />}\n              onClick={onClose}\n            />\n          )\n        }\n        style={{\n          background: theme === 'light' ? '#e9e9eb' : '#373947',\n        }}\n        autoFocus\n        onPressEnter={onPressEnter}\n        onFocus={() => setSearchVisible(true)}\n      />\n      {searchKey.length > 0 && searchVisible && (\n        <Card\n          className=\"list-apps-search\"\n          bordered={false}\n          bodyStyle={{ padding: '8px 0' }}\n        >\n          {appIds.length === 0 ? (\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n          ) : (\n            <Row className=\"scrollbar\">\n              {appIds.map((appId) => (\n                <Col\n                  key={appId}\n                  span={24}\n                  onClick={() => history.push(`/app/${appStoreId}/${appId}`)}\n                  className=\"app-item-select\"\n                >\n                  <Space\n                    size={8}\n                    style={{ cursor: 'pointer', padding: '12px 16px' }}\n                  >\n                    <AppIcon size={32} appId={appId} name={false} />\n                    <Typography.Text>{register[appId]?.name}</Typography.Text>\n                  </Space>\n                </Col>\n              ))}\n            </Row>\n          )}\n        </Card>\n      )}\n    </div>\n  )\n}\n\nconst MobileSearch = () => {\n  const [visible, setVisible] = useState(false)\n  const visibleStyle = visible\n    ? { width: '100%', opacity: 1 }\n    : { width: 0, opacity: 0 }\n\n  return (\n    <Fragment>\n      <div\n        style={{\n          position: 'absolute',\n          right: 0,\n          top: '50%',\n          transform: 'translateY(-50%)',\n          transition: 'all .3s linear',\n          ...visibleStyle,\n        }}\n      >\n        <MenuSearch closeabel onClose={() => setVisible(false)} />\n      </div>\n      {!visible && (\n        <Button\n          type=\"text\"\n          icon={<IonIcon name=\"search-outline\" />}\n          onClick={() => setVisible(true)}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nconst WrapSearch = () => {\n  const infix = useInfix()\n  const isMobile = infix < Infix.lg\n\n  if (isMobile) return <MobileSearch />\n  return <MenuSearch />\n}\n\nexport default WrapSearch\n","import { Col, Row, Card } from 'antd'\nimport MenuBar from './menuBar'\nimport MenuSearch from './menuSearch'\n\nimport './index.less'\n\nconst Search = () => {\n  return (\n    <Card\n      className=\"card-menu-categoires\"\n      style={{ borderRadius: 12 }}\n      bodyStyle={{ padding: 16 }}\n      bordered={false}\n    >\n      <Row\n        gutter={[12, 12]}\n        align=\"middle\"\n        style={{ position: 'relative' }}\n        justify=\"space-between\"\n        wrap={false}\n      >\n        <Col>\n          <MenuBar />\n        </Col>\n        <Col style={{ position: 'unset' }}>\n          <MenuSearch />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Search\n","import { useRegister } from '@sentre/senhub'\n\nimport { Col, Row, Typography } from 'antd'\nimport AppCardInfo from 'components/appCardInfo'\nimport FlexibleCard from 'components/flexibleCard'\n\nconst ListApp = () => {\n  const register = useRegister()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Typography.Title level={2}>All Apps</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          {Object.keys(register).map((appId, idx) => (\n            <Col xs={24} sm={12} md={12} lg={8} key={idx}>\n              <FlexibleCard type=\"green\" className=\"hoverable-transform\">\n                <AppCardInfo appId={appId} padding={12} radius={12} />\n              </FlexibleCard>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ListApp\n","import useWalletConnected from 'hooks/useWalletConnected'\nimport { ComponentProps, ElementType, useCallback } from 'react'\nimport { Route, Redirect, useLocation } from 'react-router-dom'\n\nexport type PrivateRouteProps = {\n  component: ElementType\n} & ComponentProps<typeof Route>\n\nconst PrivateRoute = ({ component: Component, ...rest }: PrivateRouteProps) => {\n  const { pathname } = useLocation()\n  const walletConnected = useWalletConnected()\n\n  const render = useCallback(\n    (props) => {\n      const redirect = encodeURIComponent(pathname)\n      if (!walletConnected)\n        return <Redirect to={'/app/store?redirect=' + redirect} />\n      return <Component {...props} />\n    },\n    [Component, pathname, walletConnected],\n  )\n\n  return <Route {...rest} render={render} />\n}\n\nexport default PrivateRoute\n","import { useEffect } from 'react'\nimport { useSetBackground, useAppRoute } from '@sentre/senhub'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Affix, Col, Layout, Row } from 'antd'\nimport Market from './market'\nimport AppInfo from 'view/appInfo'\nimport YourApps from './yourApps'\nimport Search from './search'\nimport ListApp from './listApp'\n\nimport { AppCategories, YOUR_DAPP } from 'contant'\nimport configs from 'configs'\n\nimport 'static/styles/dark.less'\nimport 'static/styles/light.less'\nimport PrivateRoute from 'components/privateRoute'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst View = () => {\n  const setBackground = useSetBackground()\n  const { root, extend } = useAppRoute(appId)\n\n  useEffect(() => {\n    setBackground({ light: '#f5f2fa', dark: '#16151b' })\n  }, [setBackground])\n\n  return (\n    <Layout>\n      <Layout.Content>\n        <Row justify=\"center\" style={{ marginBottom: 96 }}>\n          <Col xs={24} xl={22}>\n            <Switch>\n              <Route exact path={root} component={Market} />\n              <Route\n                exact\n                path={extend(`/${AppCategories.All}`)}\n                component={ListApp}\n              />\n              <PrivateRoute\n                exact\n                path={extend(`/${YOUR_DAPP}`)}\n                component={YourApps}\n              />\n              <Route exact path={extend('/:appId')} component={AppInfo} />\n              <Route path=\"*\">\n                <Redirect to={root} />\n              </Route>\n            </Switch>\n          </Col>\n        </Row>\n      </Layout.Content>\n      <Layout.Content>\n        <Affix\n          style={{\n            position: 'fixed',\n            width: '100%',\n            bottom: 5,\n            left: 0,\n            zIndex: 999,\n          }}\n        >\n          <Row justify=\"center\">\n            <Col xs={24} xl={22} style={{ paddingRight: 12, paddingLeft: 12 }}>\n              <Search />\n            </Col>\n          </Row>\n        </Affix>\n      </Layout.Content>\n    </Layout>\n  )\n}\n\nexport default View\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  counter: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {\n  counter: 0,\n}\n\n/**\n * Actions\n */\n\nexport const increaseCounter = createAsyncThunk<State, void, { state: any }>(\n  `${NAME}/increaseCounter`,\n  async (_, { getState }) => {\n    const {\n      main: { counter },\n    } = getState()\n    return { counter: counter + 1 }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      increaseCounter.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'model/devTools'\n\nimport main from 'model/main.controller'\nimport ui from 'model/ui.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n    ui,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { AntdProvider } from '@sentre/senhub'\n\nimport View from 'view'\n\nimport model from 'model'\nimport configs from 'configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <AntdProvider appId={appId} prefixCls={appId}>\n      <Provider store={model}>\n        <View />\n      </Provider>\n    </AntdProvider>\n  )\n}\n\nexport * from 'static.app'\n"],"names":["Object","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","obj","__esModule","panels","ErrorBoundary","Component","constructor","props","super","this","state","failed","componentDidUpdate","prevProps","children","setState","render","defaultChildren","useRemoteStatic","url","scope","fetchAsset","useCallback","async","root","replace","res","fetch","appId","data","json","keys","forEach","key","asset","Array","isArray","map","Error","prefix","useSWR","shouldRetryOnError","revalidateOnFocus","dedupingInterval","RemoteStatic","forwardRef","ref","type","manifest","src","cloneElement","StaticLoader","defaultData","register","useRegister","useMemo","module","Suspense","fallback","Spin","size","RemoteMultiStatic","arrSrc","MultiStaticLoader","shared","process","development","production","DEFAULT_APP_ID","devAppId","extra","name","author","email","tags","split","tag","trim","description","verified","senreg","env","configs","AppAvatar","avatarProps","Badge","className","text","placement","Avatar","RawVerticalAppIcon","onClick","appName","Space","direction","style","width","textAlign","lineHeight","shape","cursor","Typography","fontSize","Math","floor","RawHorizontalAppIcon","rest","getInfix","window","innerWidth","NAME","initialState","theme","matchMedia","matches","infix","touchable","navigator","maxTouchPoints","visibleActionCenter","visibleInstaller","background","light","dark","setTheme","createAsyncThunk","resize","setVisibleActionCenter","visible","setVisibleInstaller","setBackground","createSlice","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","storeId","useGoToStore","onGotoStoreCallback","history","useHistory","dispatch","useDispatch","useSelector","ui","blank","search","nav","open","push","scrollTo","useGoToStoreCallback","onGotoStore","image","title","useTheme","useWidth","onGoToApp","topBg","topBgLight","topBgDark","titleSize","Infix","cardTitleSize","Card","height","boxShadow","backgroundImage","backgroundRepeat","backgroundSize","bodyStyle","padding","bordered","Row","gutter","Col","xs","span","order","md","lg","level","Button","Image","preview","PANELS","interdao","anyArts","lightningTunnel","SwiperCore","Autoplay","slidesPerView","navigation","pagination","clickable","renderBullet","index","modules","Navigation","Pagination","autoplay","loop","HEIGHT_RATIO","storePanel1","redirect","storePanel2","bannerHeightRatio","bannerWidth","item","min","backgroundPosition","compareAliasString","val","arr","toLowerCase","includes","CustomCategory","useAppCategory","category","defaultTitle","related","filter","appIds","setAppIds","useState","findApps","suggest","suggestedTags","additionalTags","from","Set","findSuggestedApps","findTaggedApps","authorEmail","filterApp","useEffect","CATEGORIES","MULTI_BG_LIGHT","trending_1","Trending1_LIGHT","trending_2","Trending2_LIGHT","trending_3","Trending3_LIGHT","trending_4","Trending4_LIGHT","MULTI_BG_DARK","Trending1_DARK","Trending2_DARK","Trending3_DARK","Trending4_DARK","CardTrending","align","justify","bg","middle","bgRight","onGoToStore","colWithAlign","undefined","borderRadius","zIndex","textTransform","length","BG_COLOR","Utility","purple","green","blue","pink","murrey","spacing","bodySpacing","bodyRadius","radius","transparent","bgColor","styleBodyBg","color","backgroundColor","Tooltip","APP_DEFAULT","vertical","onOpenAppDetail","verticalSpan","wrap","imgError","overflow","paddingTop","NEW_LISTED_APP_ID","cardSpacing","splice","idx","ghost","reverse","slidePerView","speed","calculatePerCard","spaceBetween","delay","disableOnInteraction","reverseDirection","isMobile","slideStyle","paddingLeft","paddingRight","marginLeft","paddingCard","SwiperOs","navigationId","navigaConfig","nextEl","prevEl","Lazy","lazy","Tag","margin","util","useAppIds","onInstallApp","useInstallApp","useGoToApp","installed","onOpen","e","stopPropagation","flex","ellipsis","tooltip","id","top","slidePerViews","slideMobile","screenWidth","cardHeight","ELEMENT_SPACING","hotAppIds","sort","a","app","border","icon","options","suggestTitle","suggestAppIds","xl","xxl","Empty","rows","displayTitle","lowerTitle","nextTitle","slicePerView","Grid","grid","fill","swiper","BG_COLOR_1","indexColor","cardBackground","avatar","strong","reweet","LIST_TWITTER","listTwitterRender","walletAddress","useWalletAddress","useLocation","resgister","walletConnected","useWalletConnected","URLSearchParams","location","paramRedirect","decodeURIComponent","ReadMoreModal","content","setVisible","Fragment","Modal","onCancel","closeIcon","footer","centered","dangerouslySetInnerHTML","__html","Markdown","setText","fetchData","txt","er","innerHtml","Remarkable","html","lineCount","match","isShowReadMore","opOpen","onInstall","onUninstall","useUninstallApp","useInfix","block","ExtraTypography","label","shareWith","onClose","copied","setCopied","onShare","params","href","prop","encodeURIComponent","onCopy","copy","shareLogo","closable","Input","suffix","setShareWith","onOpenModal","floatSocialButton","account","PADDING_CARD","calculateHeightImage","appStoreId","useParams","onBack","goBack","sm","yourAppIds","AppCategories","YOUR_DAPP","QueryParams","variant","Overview","Defi","Game","Yours","More","All","Liquidity","Sentre","DAO","Portfolio","activeSegmented","setActiveSegmented","wrapperRef","useRef","extend","useAppRoute","query","pathName","pathname","urlCategory","showMoreCats","showedCats","nextCategories","disabled","indexOfMoreCat","findIndex","absolutePath","onDefaultActiveSegmented","endsWith","position","bottom","right","Segmented","onChange","keyword","limit","fuzzy","slice","lunr","field","extractor","doc","join","appManifest","add","searching","ButtonSearch","clearable","loading","indicator","LoadingOutlined","spin","MenuSearch","closeabel","searchKey","setSearchKey","setLoading","searchVisible","setSearchVisible","urlSearchKeys","engine","SearchEngine","onSearch","clearTimeout","setTimeout","err","onPressEnter","ctxWrapper","current","document","addEventListener","target","assertIsNode","contains","removeEventListener","placeholder","event","autoFocus","onFocus","MobileSearch","visibleStyle","opacity","transform","transition","component","Redirect","to","Route","useSetBackground","Layout","marginBottom","Switch","exact","path","Market","ListApp","YourApps","AppInfo","Affix","left","BigInt","prototype","toJSON","toString","bigintSerializationMiddleware","serializableCheck","isSerializable","proto","getPrototypeOf","isPlainObject","PublicKey","BN","Buffer","isBuffer","increaseCounter","_","getState","main","counter","configureStore","middleware","getDefaultMiddleware","devTools","reducer","Page","AntdProvider","prefixCls","Provider","store","model"],"sourceRoot":""}